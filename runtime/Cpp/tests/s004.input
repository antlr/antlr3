(SELECT STALENESS
, OSIZE
, OBJ#
, TYPE#
, CASE WHEN STALENESS > LOG(0.01, NVL(LOC_STALE_PCT, :B1 )/100) THEN 128 ELSE 0 END + AFLAGS AFLAGS
, STATUS
, SID
, SERIAL#
, PART#
, BO# 
FROM 
( 
  SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(T.FLAGS,16), 16, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(T.ROWCNT, M.INSERTS), LEAST((M.INSERTS + M.DELETES + M.UPDATES), GREATEST(T.ROWCNT, (T.ROWCNT + M.INSERTS - M.DELETES)))) / (T.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STALENESS, CASE WHEN T.FILE# = 0 THEN DBMS_STATS_INTERNAL.GET_TABLE_BLOCK_COUNT(U.NAME, O.NAME, NULL, NULL) WHEN S.TYPE# = 5 THEN DBMS_SPACE_ADMIN.SEGMENT_NUMBER_BLOCKS(T.TS#, T.FILE#, T.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0), O.DATAOBJ#, S.BLOCKS) ELSE NULL END * NVL(TS.BLOCKSIZE, :B6 ) OSIZE, O.OBJ# OBJ#, O.TYPE# TYPE#, 32 AFLAGS, 0 STATUS, :B5 SID, :B4 SERIAL#, NULL PART#, NULL BO#, TO_NUMBER(P.VALCHAR) LOC_STALE_PCT FROM SYS.SEG$ S, SYS.TS$ TS, SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.MON_MODS_ALL$ M, OPTSTAT_USER_PREFS$ P WHERE (BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(T.OBJ#, :B3 ), :B2 ) <> 0) AND O.TYPE# = 2 AND T.OBJ# = O.OBJ# AND O.OWNER# = U.USER# AND M.OBJ#(+) = T.OBJ# AND T.FILE# = S.FILE#(+) AND T.BLOCK# = S.BLOCK#(+) AND T.TS# = S.TS#(+) AND TS.TS#(+) = S.TS# AND BITAND(T.TRIGFLAG,67108864) != 67108864 AND BITAND(T.PROPERTY,64+512) = 0 AND BITAND(T.FLAGS,536870912) != 536870912 AND BITAND(T.FLAGS,2097152) != 2097152 AND BITAND(O.FLAGS, 128) != 128 AND BITAND(T.PROPERTY,2147483648) = 0 AND (BITAND(T.PROPERTY,4194304) != 4194304 AND BITAND(T.PROPERTY,8388608) != 8388608) AND NOT (BITAND(O.FLAGS, 16) = 16 AND (O.NAME LIKE 'DR$%' OR O.NAME LIKE 'DR#%')) AND NOT (U.NAME = 'SYS' AND O.NAME = 'SUMDELTA$') AND O.OBJ# = P.OBJ#(+) AND P.PNAME(+) = 'STALE_PERCENT' AND (U.NAME,O.NAME) NOT IN (SELECT /*+ unnest */ * FROM (SELECT MOWNER,LOG FROM MLOG$ UNION ALL SELECT MOWNER,TEMP_LOG FROM MLOG$ WHERE TEMP_LOG IS NOT NULL)) AND ((BITAND(T.FLAGS,16) = 16 AND ((BITAND(M.FLAGS,5) != 0) OR ((M.INSERTS + M.UPDATES + M.DELETES) > NVL(TO_NUMBER(P.VALCHAR), :B1 )/100 * T.ROWCNT))) OR (BITAND(T.FLAGS,16) != 16)) UNION ALL SELECT STALENESS, OSIZE, OBJ#, TYPE#, CASE WHEN ROW_NUMBER() OVER (PARTITION BY BO# ORDER BY STALENESS, OSIZE, OBJ#) = 1 THEN 32 ELSE 0 END + 64 AFLAGS, 0 STATUS, :B5 SID, :B4 SERIAL#, PART#, BO#, LOC_STALE_PCT FROM ( SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(T.FLAGS,2), 2, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(T.ROWCNT, M.INSERTS), LEAST((M.INSERTS + M.DELETES + M.UPDATES), GREATEST(T.ROWCNT, (T.ROWCNT + M.INSERTS - M.DELETES)))) / (T.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STALENESS, DBMS_SPACE_ADMIN.SEGMENT_NUMBER_BLOCKS(T.TS#, T.FILE#, T.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0), O.DATAOBJ#, S.BLOCKS) * TS.BLOCKSIZE OSIZE, O.OBJ# OBJ#, O.TYPE# TYPE#, T.PART# PART#, T.BO# BO#, TO_NUMBER(P.VALCHAR) LOC_STALE_PCT FROM SYS.SEG$ S, SYS.TS$ TS, SYS.OBJ$ O, SYS.TABPART$ T, SYS.TAB$ TAB, SYS.OBJ$ OT, SYS.MON_MODS_ALL$ M, SYS.OPTSTAT_USER_PREFS$ P WHERE O.TYPE# = 19 AND S.TYPE# = 5 AND T.OBJ# = O.OBJ# AND TAB.OBJ# = T.BO# AND M.OBJ#(+) = T.OBJ# AND T.FILE# = S.FILE# AND T.BLOCK# = S.BLOCK# AND T.TS# = S.TS# AND TS.TS# = S.TS# AND BITAND(TAB.TRIGFLAG,67108864) != 67108864 AND BITAND(TAB.PROPERTY,512) != 512 AND BITAND(TAB.FLAGS,536870912) != 536870912 AND BITAND(T.FLAGS,2097152) != 2097152 AND BITAND(T.FLAGS, 32) != 32 AND TAB.OBJ# = OT.OBJ# AND BITAND(OT.FLAGS,128) != 128 AND NOT (BITAND(O.FLAGS, 16) = 16 AND (O.NAME LIKE 'DR$%' OR O.NAME LIKE 'DR#%')) AND O.OBJ# = P.OBJ#(+) AND P.PNAME(+) = 'STALE_PERCENT' AND ((BITAND(T.FLAGS,2) = 2 AND ((BITAND(M.FLAGS,5) != 0) OR ((M.INSERTS + M.UPDATES + M.DELETES) > NVL(TO_NUMBER(P.VALCHAR), :B1 )/100 * T.ROWCNT))) OR (BITAND(T.FLAGS,2) != 2)) UNION ALL SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(T.FLAGS,2), 2, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(T.ROWCNT, M.INSERTS), LEAST((M.INSERTS + M.DELETES + M.UPDATES), GREATEST(T.ROWCNT, (T.ROWCNT + M.INSERTS - M.DELETES)))) / (T.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STALENESS, DBMS_STATS_INTERNAL.GET_TABLE_BLOCK_COUNT(U.NAME,O.NAME, O.SUBNAME,NULL) * :B6 OSIZE, O.OBJ# OBJ#, O.TYPE# TYPE#, T.PART# PART#, T.BO# BO#, TO_NUMBER(P.VALCHAR) LOC_STALE_PCT FROM SYS.OBJ$ O, SYS.USER$ U, SYS.TABCOMPART$ T, SYS.TAB$ TAB, SYS.OBJ$ OT, SYS.MON_MODS_ALL$ M, SYS.OPTSTAT_USER_PREFS$ P WHERE O.TYPE# = 19 AND T.OBJ# = O.OBJ# AND O.OWNER# = U.USER# AND TAB.OBJ# = T.BO# AND M.OBJ#(+) = T.OBJ# AND BITAND(TAB.TRIGFLAG,67108864) != 67108864 AND BITAND(T.FLAGS, 32) != 32 AND TAB.OBJ# = OT.OBJ# AND BITAND(OT.FLAGS,128) != 128 AND NOT (BITAND(O.FLAGS, 16) = 16 AND (O.NAME LIKE 'DR$%' OR O.NAME LIKE 'DR#%')) AND O.OBJ# = P.OBJ#(+) AND P.PNAME(+) = 'STALE_PERCENT' AND ((BITAND(T.FLAGS,2) = 2 AND ((BITAND(M.FLAGS,5) != 0) OR ((M.INSERTS + M.UPDATES + M.DELETES) > NVL(TO_NUMBER(P.VALCHAR), :B1 )/100 * T.ROWCNT))) OR (BITAND(T.FLAGS,2) != 2)) ) WHERE BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(BO#, :B3 ), :B7 ) <> 0 UNION ALL SELECT STALENESS, OSIZE, OBJ#, TYPE#, CASE WHEN ROW_NUMBER() OVER (PARTITION BY BO# ORDER BY STALENESS, OSIZE, OBJ#) = 1 THEN 64 ELSE 0 END + CASE WHEN ROW_NUMBER() 


OVER (PARTITION BY (SELECT TCP0.BO# FROM TABCOMPART$ TCP0 WHERE TCP0.OBJ#=ST0.BO#) ORDER BY STALENESS, OSIZE, OBJ#) = 1 THEN 32 ELSE 0 END AFLAGS, 0 STATUS, :B5 SID, :B4 SERIAL#, PART#, BO#, LOC_STALE_PCT FROM (SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(T.FLAGS,2), 2, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(T.ROWCNT, M.INSERTS), LEAST((M.INSERTS + M.DELETES + M.UPDATES), GREATEST(T.ROWCNT, (T.ROWCNT + M.INSERTS - M.DELETES)))) / (T.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STALENESS, DBMS_SPACE_ADMIN.SEGMENT_NUMBER_BLOCKS(T.TS#, T.FILE#, T.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0), O.DATAOBJ#, S.BLOCKS) * TS.BLOCKSIZE OSIZE, O.OBJ# OBJ#, O.TYPE# TYPE#, T.SUBPART# PART#, T.POBJ# BO#, TO_NUMBER(P.VALCHAR) LOC_STALE_PCT FROM SYS.SEG$ S, SYS.TS$ TS, SYS.OBJ$ O, SYS.TABSUBPART$ T, SYS.TABCOMPART$ TCP, SYS.TAB$ TAB, SYS.OBJ$ OT, SYS.MON_MODS_ALL$ M, SYS.PARTOBJ$ PO, SYS.OPTSTAT_USER_PREFS$ P WHERE O.TYPE# = 34 AND S.TYPE# = 5 AND T.OBJ# = O.OBJ# AND M.OBJ#(+) = T.OBJ# AND T.FILE# = S.FILE# AND T.BLOCK# = S.BLOCK# AND T.TS# = S.TS# AND TS.TS# = S.TS# AND TCP.OBJ# = T.POBJ# AND TCP.BO# = TAB.OBJ# AND PO.OBJ# = TAB.OBJ# AND (((BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(T.OBJ#, :B3 ), :B9 ) <> 0) AND BITAND(PO.SPARE2, 255) = 2) OR ((BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(T.OBJ#, :B3 ), :B8 ) <> 0) AND BITAND(PO.SPARE2, 255) NOT IN (0, 2))) AND BITAND(TAB.TRIGFLAG,67108864) != 67108864 AND TAB.OBJ# = OT.OBJ# AND BITAND(OT.FLAGS,128) != 128 AND NOT (BITAND(O.FLAGS, 16) = 16 AND (O.NAME LIKE 'DR$%' OR O.NAME LIKE 'DR#%')) AND BITAND(TCP.FLAGS, 32) != 32 AND O.OBJ# = P.OBJ#(+) AND P.PNAME(+) = 'STALE_PERCENT' AND ((BITAND(T.FLAGS,2) = 2 AND ((BITAND(M.FLAGS,5) != 0) OR ((M.INSERTS + M.UPDATES + M.DELETES) > NVL(TO_NUMBER(P.VALCHAR), :B1 )/100 * T.ROWCNT))) OR (BITAND(T.FLAGS,2) != 2))) ST0 UNION ALL SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(I.FLAGS,2), 2, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(CM.TRUNC, 1, GREATEST(CM.ROWCNT, CM.INSERTS), CM.TOT_MODS/(CM.ROWCNT + 0.01))))), 0.01)), 1), -100.0) STALENESS, DBMS_SPACE_ADMIN.SEGMENT_NUMBER_BLOCKS(I.TS#, I.FILE#, I.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0), O.DATAOBJ#, S.BLOCKS) * TS.BLOCKSIZE OSIZE, O.OBJ# OBJ#, O.TYPE# TYPE#, 32 AFLAGS, 0 STATUS, :B5 SID, :B4 SERIAL#, NULL PART#, I.BO# BO#, TO_NUMBER(P.VALCHAR) LOC_STALE_PCT FROM SYS.SEG$ S, SYS.TS$ TS, SYS.OBJ$ O, SYS.IND$ I, SYS.OPTSTAT_USER_PREFS$ P, (SELECT BOBJ#, SUM(BITAND(T.TRIGFLAG, 67108864)/67108864) LOCKED, SUM(BITAND(M.FLAGS,1))/COUNT(M.FLAGS) TRUNC, SUM(M.INSERTS+M.DELETES) TOT_MODS, SUM(M.INSERTS) INSERTS, SUM(T.ROWCNT) ROWCNT FROM MON_MODS_ALL$ M, TAB$ T WHERE M.OBJ#(+) = T.OBJ# AND T.CLUCOLS IS NOT NULL GROUP BY BOBJ#) CM WHERE (DBMS_STATS_INTERNAL.GATHER_INDEX(CM.BOBJ#, :B10 ) IS NOT NULL) AND O.TYPE# = 1 AND S.TYPE# = 6 AND I.TYPE# = 3 AND I.OBJ# = O.OBJ# AND I.BO# = CM.BOBJ#(+) AND I.FILE# = S.FILE# AND I.BLOCK# = S.BLOCK# AND I.TS# = S.TS# AND TS.TS# = S.TS# AND BITAND(O.FLAGS, 128) != 128 AND O.OBJ# = P.OBJ#(+) AND P.PNAME(+) = 'STALE_PERCENT' AND (BITAND(I.FLAGS, 2) = 0 OR (BITAND(I.FLAGS, 2) != 0 AND (CM.TRUNC > 0 OR CM.TOT_MODS > NVL(TO_NUMBER(P.VALCHAR), :B1 )/100 * CM.ROWCNT))) AND CM.LOCKED = 0 AND BITAND(I.FLAGS,1+8+16+1024+4096) = 0 UNION ALL SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(T.FLAGS,16), 16, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(T.ROWCNT, M.INSERTS), LEAST((M.INSERTS + M.DELETES + M.UPDATES), GREATEST(T.ROWCNT, (T.ROWCNT + M.INSERTS - M.DELETES)))) / (T.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STALENESS, CASE WHEN I.FILE# = 0 THEN DBMS_STATS_INTERNAL.GET_INDEX_BLOCK_COUNT(U.NAME, OI.NAME, NULL, NULL) WHEN S.TYPE# = 6 THEN DBMS_SPACE_ADMIN.SEGMENT_NUMBER_BLOCKS(I.TS#, I.FILE#, I.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0), I.DATAOBJ#, S.BLOCKS) ELSE NULL END * NVL(TS.BLOCKSIZE, :B6 ) OSIZE, OT.OBJ# OBJ#, OT.TYPE# TYPE#, 32 AFLAGS, 0 STATUS, :B5 SID, :B4 SERIAL#, NULL PART#, NULL BO#, TO_NUMBER(P.VALCHAR) LOC_STALE_PCT FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.IND$ I, SYS.SEG$ S, SYS.MON_MODS_ALL$ M, SYS.TS$ TS, SYS.TAB$ T, SYS.OBJ$ OI, OPTSTAT_USER_PREFS$ P WHERE (BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(T.OBJ#, :B3 ), :B2 ) <> 0) AND I.TYPE# = 4 AND I.BO# = OT.OBJ# AND BITAND(OT.FLAGS,128) != 128 AND OT.OWNER# = U.USER# AND M.OBJ#(+) = OT.OBJ# AND I.FILE# = S.FILE#(+) AND I.BLOCK# = S.BLOCK#(+) AND I.TS# = S.TS#(+) AND TS.TS#(+) = S.TS# AND T.OBJ# = OT.OBJ# AND I.OBJ# = OI.OBJ# AND NOT (BITAND(OT.FLAGS, 16) = 16 AND (OT.NAME LIKE 'DR$%' OR OT.NAME LIKE 'DR#%')) AND BITAND(T.TRIGFLAG, 67108864) != 67108864 AND OT.OBJ# = P.OBJ#(+) AND P.PNAME(+) = 'STALE_PERCENT' AND ((BITAND(T.FLAGS,16) = 16 AND ((BITAND(M.FLAGS,1) = 1) OR ((M.INSERTS + M.UPDATES + M.DELETES) > NVL(TO_NUMBER(P.VALCHAR), :B1 )/100 * T.ROWCNT))) OR (BITAND(M.FLAGS, 4) = 4) OR (BITAND(T.FLAGS,16) != 16)) UNION ALL SELECT /*+ leading(i t) no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ STALENESS, OSIZE, OBJ#, TYPE#, CASE WHEN ROW_NUMBER() OVER (PARTITION BY BO# ORDER BY STALENESS, OSIZE, OBJ#) = 1 THEN 32 ELSE 0 END + 64 AFLAGS, 0 STATUS, :B5 SID, :B4 SERIAL#, PART#, BO#, LOC_STALE_PCT FROM (SELECT DECODE(BITAND(TP.FLAGS,2), 2, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(TP.ROWCNT, M.INSERTS), LEAST((M.INSERTS + M.DELETES + M.UPDATES), GREATEST(TP.ROWCNT, (TP.ROWCNT + M.INSERTS - M.DELETES)))) / (TP.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STALENESS, DBMS_SPACE_ADMIN.SEGMENT_NUMBER_BLOCKS(IP.TS#, IP.FILE#, IP.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0), IP.DATAOBJ#, S.BLOCKS) * TS.BLOCKSIZE OSIZE, OT.OBJ# OBJ#, OT.TYPE# TYPE#, TP.PART# PART#, TP.BO# BO#, TO_NUMBER(P.VALCHAR) LOC_STALE_PCT FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.IND$ I, SYS.INDPART$ IP, SYS.TABPART$ TP, SYS.SEG$ S, SYS.MON_MODS_ALL$ M, SYS.TS$ TS, SYS.TAB$ T, SYS.OPTSTAT_USER_PREFS$ P WHERE I.TYPE# = 4 AND S.TYPE# = 6 AND OT.OWNER# = U.USER# AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND TP.OBJ# = OT.OBJ# AND I.BO# = TP.BO# AND BITAND(OT.FLAGS,128) != 128 AND M.OBJ#(+) = OT.OBJ# AND IP.FILE# = S.FILE# AND IP.BLOCK# = S.BLOCK# AND IP.TS# = S.TS# AND TS.TS# = S.TS# AND I.BO# = T.OBJ# AND NOT (BITAND(OT.FLAGS, 16) = 16 AND (OT.NAME LIKE 'DR$%' OR OT.NAME LIKE 'DR#%')) AND BITAND(T.TRIGFLAG,67108864) != 67108864 AND BITAND(TP.FLAGS, 32) != 32 AND OT.OBJ# = P.OBJ#(+) AND P.PNAME(+) = 'STALE_PERCENT' AND ((BITAND(TP.FLAGS,2) = 2 AND ((BITAND(M.FLAGS,1) = 1) OR ((M.INSERTS + M.UPDATES + M.DELETES) > NVL(TO_NUMBER(P.VALCHAR), :B1 )/100 * TP.ROWCNT))) OR (BITAND(M.FLAGS, 4) = 4) OR (BITAND(TP.FLAGS,2) != 2))) WHERE BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(BO#, :B3 ), :B7 ) <> 0 UNION ALL SELECT /*+ ordered */ -99 STALENESS, 100*:B6 OSIZE, I.OBJ# OBJ#, 1 TYPE#, 32 AFLAGS, 0 STATUS, :B5 SID, :B4 SERIAL#, NULL PART#, I.BO# BO#, NULL LOC_STALE_PCT FROM SYS.IND$ I, SYS.TAB$ T, SYS.OBJ$ O, USER$ U WHERE (DBMS_STATS_INTERNAL.GATHER_INDEX(I.BO#, :B10 ) IS NOT NULL) AND (BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(I.BO#, :B3 ), :B2 ) <> 0) AND BITAND(I.PROPERTY,32) != 32 AND BITAND(I.PROPERTY,64) != 64 AND BITAND(I.FLAGS,2) != 2 AND I.BO# = T.OBJ# AND BITAND(T.TRIGFLAG, 67108864) != 67108864 AND BITAND(T.FLAGS, 16) = 16 AND I.OBJ# = O.OBJ# AND I.TYPE# != 4 AND I.TYPE# != 8 AND BITAND(I.FLAGS,1+8+16+1024+4096) = 0 AND BITAND(O.FLAGS, 128) != 128 AND O.OWNER# = U.USER# AND NOT (U.NAME = 'SYS' AND O.NAME = 'I_SUMDELTA$') UNION ALL SELECT /*+ ordered */ -99 STALENESS, 100*:B6 OSIZE, I.OBJ# OBJ#, 20 TYPE#, 64 AFLAGS, 0 STATUS, :B5 SID, :B4 SERIAL#, I.PART# PART#, I.BO# BO#, NULL LOC_STALE_PCT FROM (SELECT OBJ#, BO#, PART#, FLAGS FROM SYS.INDPART$ WHERE BITAND(FLAGS,2) != 2 UNION ALL SELECT OBJ#, BO#, PART#, FLAGS FROM SYS.INDCOMPART$ WHERE BITAND(FLAGS,2) != 2 ) I, SYS.IND$ IND, SYS.TAB$ T, SYS.OBJ$ OI WHERE (DBMS_STATS_INTERNAL.GATHER_INDEX(I.BO#, :B10 ) IS NOT NULL) AND (BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(I.BO#, :B3 ), :B7 ) <> 0) AND I.BO# = IND.OBJ# AND IND.TYPE# != 4 AND IND.TYPE# != 8 AND BITAND(IND.FLAGS,1+8+16+1024+4096) = 0 AND IND.BO# = T.OBJ# AND BITAND(T.TRIGFLAG, 67108864) != 67108864 AND IND.OBJ# = OI.OBJ# AND BITAND(OI.FLAGS, 128) != 128 UNION ALL SELECT /*+ ordered */ -99 STALENESS, 100*:B6 OSIZE, I.OBJ# OBJ#, 35 TYPE#, 0 AFLAGS, 0 STATUS, :B5 SID, :B4 SERIAL#, I.SUBPART# PART#, I.POBJ# BO#, NULL LOC_STALE_PCT FROM SYS.INDSUBPART$ I, SYS.INDCOMPART$ ICP, SYS.IND$ IND, SYS.TAB$ T, SYS.PARTOBJ$ PO, SYS.OBJ$ OI WHERE (DBMS_STATS_INTERNAL.GATHER_INDEX(IND.BO#, :B10 ) IS NOT NULL) AND BITAND(I.FLAGS,2) != 2 AND I.POBJ# = ICP.OBJ# AND ICP.BO# = IND.OBJ# AND IND.TYPE# != 4 AND IND.TYPE# != 8 AND BITAND(IND.FLAGS,1+8+16+1024+4096) = 0 AND IND.BO# = T.OBJ# AND BITAND(T.TRIGFLAG, 67108864) != 67108864 AND IND.OBJ# = PO.OBJ# AND (((BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(IND.BO#, :B3 ), :B9 ) <> 0) AND BITAND(PO.SPARE2, 255) = 2) OR ((BITAND(DBMS_STATS_INTERNAL.DECODE_GRANULARITY(IND.BO#, :B3 ), :B8 ) <> 0) AND BITAND(PO.SPARE2, 255) NOT IN (0, 2))) AND IND.OBJ# = OI.OBJ# AND BITAND(OI.FLAGS, 128) != 128 
) 
WHERE OSIZE IS NOT NULL 
) 
