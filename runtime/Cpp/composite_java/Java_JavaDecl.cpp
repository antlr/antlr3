/** \file
 *  This C++ source file was generated by $ANTLR version 3.4
 *
 *     -  From the grammar source file : JavaDecl.g
 *     -                            On : 2012-02-26 10:38:15
 *     -                for the parser : Java_JavaDeclParser
 *
 * Editing it, at least manually, is not wise.
 *
 * C++ language generator and runtime by Gokulakannan Somasundaram ( heavy lifting from C Run-time by Jim Idle )
 *
 *
*/
// [The "BSD license"]
// Copyright (c) 2005-2009 Gokulakannan Somasundaram, ElectronDB
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

/* -----------------------------------------
 * Include the ANTLR3 generated header file.
 */
#include    "Java_JavaDecl.hpp"
// Include delegator definition header files
//
#include "JavaParser.hpp" 

/* ----------------------------------------- */


/* ============================================================================= */

/* =============================================================================
 * Start of recognizer
 */

	namespace 
	User
 {

using namespace antlr3;

/** \brief Name of the grammar file that generated this code
 */
static const char fileName[] = "JavaDecl.g";

/** \brief Return the name of the grammar file that generated this code.
 */
const char* Java_JavaDecl::getGrammarFileName()
{
	return fileName;
}
/** \brief Create a new Java_JavaDecl parser and return a context for it.
 *
 * \param[in] instream Pointer to an input stream interface.
 *
 * \return Pointer to new parser context upon success.
 */
Java_JavaDecl::Java_JavaDecl( StreamType* instream, JavaParser* gJava)
    :ImplTraits::BaseParserType(ANTLR_SIZE_HINT, instream, NULL)

{
	// See if we can create a new parser with the standard constructor
	//
	this->init(instream, gJava);
}

/** \brief Create a new Java_JavaDecl parser and return a context for it.
 *
 * \param[in] instream Pointer to an input stream interface.
 *
 * \return Pointer to new parser context upon success.
 */
Java_JavaDecl::Java_JavaDecl( StreamType* instream, RecognizerSharedStateType* state, JavaParser* gJava)
    :ImplTraits::BaseParserType(ANTLR_SIZE_HINT, instream, state)

{
	this->init(instream , gJava);
}

void Java_JavaDecl::init(StreamType* instream, JavaParser* gJava)
{
     	// Install the pointers back to lexers that will delegate us to perform certain functions
     	// for them.
     	//
     		m_gJava = gJava;
	/* Install the token table
	*/
	this->get_psrstate()->set_tokenNames( JavaParserTokenNames );


}

void
Java_JavaDecl::reset()
{
    this->get_rec()->reset();
}

/** Free the parser resources
 */
Java_JavaDecl::~Java_JavaDecl()
 {
}

/** Return token names used by this 
parser

 *
 * The returned pointer is used as an index into the token names table (using the token
 * number as the index).
 *
 * \return Pointer to first char * in the table.
 */
static ANTLR_UINT8**	getTokenNames()
{
        return JavaParserTokenNames;
}


/* Declare the bitsets
 */
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_88_in_packageDeclaration23_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_88_in_packageDeclaration23( FOLLOW_88_in_packageDeclaration23_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_qualifiedName_in_packageDeclaration25_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_qualifiedName_in_packageDeclaration25( FOLLOW_qualifiedName_in_packageDeclaration25_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_packageDeclaration27_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_packageDeclaration27( FOLLOW_47_in_packageDeclaration27_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_80_in_importDeclaration39_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000), ANTLR_UINT64_LIT(0x0000000040000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_80_in_importDeclaration39( FOLLOW_80_in_importDeclaration39_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_94_in_importDeclaration41_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_94_in_importDeclaration41( FOLLOW_94_in_importDeclaration41_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_importDeclaration44_bits[]	= { ANTLR_UINT64_LIT(0x0000840000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_importDeclaration44( FOLLOW_Identifier_in_importDeclaration44_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_42_in_importDeclaration47_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_42_in_importDeclaration47( FOLLOW_42_in_importDeclaration47_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_importDeclaration49_bits[]	= { ANTLR_UINT64_LIT(0x0000840000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_importDeclaration49( FOLLOW_Identifier_in_importDeclaration49_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_42_in_importDeclaration54_bits[]	= { ANTLR_UINT64_LIT(0x0000000200000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_42_in_importDeclaration54( FOLLOW_42_in_importDeclaration54_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_33_in_importDeclaration56_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_33_in_importDeclaration56( FOLLOW_33_in_importDeclaration56_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_importDeclaration60_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_importDeclaration60( FOLLOW_47_in_importDeclaration60_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration73_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration73( FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration73_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_typeDeclaration83_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_typeDeclaration83( FOLLOW_47_in_typeDeclaration83_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_modifier_in_classOrInterfaceDeclaration95_bits[]	= { ANTLR_UINT64_LIT(0x0420000000000080), ANTLR_UINT64_LIT(0x00000444CE280404) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_modifier_in_classOrInterfaceDeclaration95( FOLLOW_modifier_in_classOrInterfaceDeclaration95_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_classDeclaration_in_classOrInterfaceDeclaration99_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_classDeclaration_in_classOrInterfaceDeclaration99( FOLLOW_classDeclaration_in_classOrInterfaceDeclaration99_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration103_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration103( FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration103_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_normalClassDeclaration_in_classDeclaration116_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_normalClassDeclaration_in_classDeclaration116( FOLLOW_normalClassDeclaration_in_classDeclaration116_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_enumDeclaration_in_classDeclaration126_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_enumDeclaration_in_classDeclaration126( FOLLOW_enumDeclaration_in_classDeclaration126_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_66_in_normalClassDeclaration138_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_66_in_normalClassDeclaration138( FOLLOW_66_in_normalClassDeclaration138_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_normalClassDeclaration140_bits[]	= { ANTLR_UINT64_LIT(0x0001000000000000), ANTLR_UINT64_LIT(0x0000100000008100) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_normalClassDeclaration140( FOLLOW_Identifier_in_normalClassDeclaration140_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeParameters_in_normalClassDeclaration143_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000100000008100) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeParameters_in_normalClassDeclaration143( FOLLOW_typeParameters_in_normalClassDeclaration143_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_72_in_normalClassDeclaration156_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_72_in_normalClassDeclaration156( FOLLOW_72_in_normalClassDeclaration156_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_normalClassDeclaration158_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000100000008000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_normalClassDeclaration158( FOLLOW_type_in_normalClassDeclaration158_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_79_in_normalClassDeclaration171_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_79_in_normalClassDeclaration171( FOLLOW_79_in_normalClassDeclaration171_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeList_in_normalClassDeclaration173_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000100000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeList_in_normalClassDeclaration173( FOLLOW_typeList_in_normalClassDeclaration173_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_classBody_in_normalClassDeclaration185_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_classBody_in_normalClassDeclaration185( FOLLOW_classBody_in_normalClassDeclaration185_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_48_in_typeParameters197_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_48_in_typeParameters197( FOLLOW_48_in_typeParameters197_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeParameter_in_typeParameters199_bits[]	= { ANTLR_UINT64_LIT(0x0008004000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeParameter_in_typeParameters199( FOLLOW_typeParameter_in_typeParameters199_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_typeParameters202_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_typeParameters202( FOLLOW_38_in_typeParameters202_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeParameter_in_typeParameters204_bits[]	= { ANTLR_UINT64_LIT(0x0008004000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeParameter_in_typeParameters204( FOLLOW_typeParameter_in_typeParameters204_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_51_in_typeParameters208_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_51_in_typeParameters208( FOLLOW_51_in_typeParameters208_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_typeParameter219_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002), ANTLR_UINT64_LIT(0x0000000000000100) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_typeParameter219( FOLLOW_Identifier_in_typeParameter219_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_72_in_typeParameter222_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_72_in_typeParameter222( FOLLOW_72_in_typeParameter222_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_bound_in_typeParameter224_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_bound_in_typeParameter224( FOLLOW_bound_in_typeParameter224_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_bound239_bits[]	= { ANTLR_UINT64_LIT(0x0000000020000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_bound239( FOLLOW_type_in_bound239_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_29_in_bound242_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_29_in_bound242( FOLLOW_29_in_bound242_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_bound244_bits[]	= { ANTLR_UINT64_LIT(0x0000000020000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_bound244( FOLLOW_type_in_bound244_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_ENUM_in_enumDeclaration257_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_ENUM_in_enumDeclaration257( FOLLOW_ENUM_in_enumDeclaration257_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_enumDeclaration259_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000100000008000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_enumDeclaration259( FOLLOW_Identifier_in_enumDeclaration259_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_79_in_enumDeclaration262_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_79_in_enumDeclaration262( FOLLOW_79_in_enumDeclaration262_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeList_in_enumDeclaration264_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000100000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeList_in_enumDeclaration264( FOLLOW_typeList_in_enumDeclaration264_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_enumBody_in_enumDeclaration268_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_enumBody_in_enumDeclaration268( FOLLOW_enumBody_in_enumDeclaration268_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_108_in_enumBody280_bits[]	= { ANTLR_UINT64_LIT(0x0020804000004000), ANTLR_UINT64_LIT(0x0001000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_108_in_enumBody280( FOLLOW_108_in_enumBody280_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_enumConstants_in_enumBody282_bits[]	= { ANTLR_UINT64_LIT(0x0000804000000000), ANTLR_UINT64_LIT(0x0001000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_enumConstants_in_enumBody282( FOLLOW_enumConstants_in_enumBody282_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_enumBody285_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000), ANTLR_UINT64_LIT(0x0001000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_enumBody285( FOLLOW_38_in_enumBody285_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_enumBodyDeclarations_in_enumBody288_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0001000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_enumBodyDeclarations_in_enumBody288( FOLLOW_enumBodyDeclarations_in_enumBody288_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_112_in_enumBody291_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_112_in_enumBody291( FOLLOW_112_in_enumBody291_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_enumConstant_in_enumConstants302_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_enumConstant_in_enumConstants302( FOLLOW_enumConstant_in_enumConstants302_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_enumConstants305_bits[]	= { ANTLR_UINT64_LIT(0x0020000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_enumConstants305( FOLLOW_38_in_enumConstants305_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_enumConstant_in_enumConstants307_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_enumConstant_in_enumConstants307( FOLLOW_enumConstant_in_enumConstants307_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_annotations_in_enumConstant321_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_annotations_in_enumConstant321( FOLLOW_annotations_in_enumConstant321_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_enumConstant324_bits[]	= { ANTLR_UINT64_LIT(0x0000000080000002), ANTLR_UINT64_LIT(0x0000100000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_enumConstant324( FOLLOW_Identifier_in_enumConstant324_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_arguments_in_enumConstant327_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002), ANTLR_UINT64_LIT(0x0000100000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_arguments_in_enumConstant327( FOLLOW_arguments_in_enumConstant327_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_classBody_in_enumConstant332_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_classBody_in_enumConstant332( FOLLOW_classBody_in_enumConstant332_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_enumBodyDeclarations346_bits[]	= { ANTLR_UINT64_LIT(0x5421800000004082), ANTLR_UINT64_LIT(0x00001644EE3C1446) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_enumBodyDeclarations346( FOLLOW_47_in_enumBodyDeclarations346_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_classBodyDeclaration_in_enumBodyDeclarations349_bits[]	= { ANTLR_UINT64_LIT(0x5421800000004082), ANTLR_UINT64_LIT(0x00001644EE3C1446) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_classBodyDeclaration_in_enumBodyDeclarations349( FOLLOW_classBodyDeclaration_in_enumBodyDeclarations349_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration363_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration363( FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration363_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration369_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration369( FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration369_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_83_in_normalInterfaceDeclaration381_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_83_in_normalInterfaceDeclaration381( FOLLOW_83_in_normalInterfaceDeclaration381_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_normalInterfaceDeclaration383_bits[]	= { ANTLR_UINT64_LIT(0x0001000000000000), ANTLR_UINT64_LIT(0x0000100000000100) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_normalInterfaceDeclaration383( FOLLOW_Identifier_in_normalInterfaceDeclaration383_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeParameters_in_normalInterfaceDeclaration385_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000100000000100) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeParameters_in_normalInterfaceDeclaration385( FOLLOW_typeParameters_in_normalInterfaceDeclaration385_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_72_in_normalInterfaceDeclaration389_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_72_in_normalInterfaceDeclaration389( FOLLOW_72_in_normalInterfaceDeclaration389_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeList_in_normalInterfaceDeclaration391_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000100000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeList_in_normalInterfaceDeclaration391( FOLLOW_typeList_in_normalInterfaceDeclaration391_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceBody_in_normalInterfaceDeclaration395_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceBody_in_normalInterfaceDeclaration395( FOLLOW_interfaceBody_in_normalInterfaceDeclaration395_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_typeList407_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_typeList407( FOLLOW_type_in_typeList407_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_typeList410_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_typeList410( FOLLOW_38_in_typeList410_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_typeList412_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_typeList412( FOLLOW_type_in_typeList412_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_108_in_classBody426_bits[]	= { ANTLR_UINT64_LIT(0x5421800000004080), ANTLR_UINT64_LIT(0x00011644EE3C1446) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_108_in_classBody426( FOLLOW_108_in_classBody426_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_classBodyDeclaration_in_classBody428_bits[]	= { ANTLR_UINT64_LIT(0x5421800000004080), ANTLR_UINT64_LIT(0x00011644EE3C1446) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_classBodyDeclaration_in_classBody428( FOLLOW_classBodyDeclaration_in_classBody428_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_112_in_classBody431_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_112_in_classBody431( FOLLOW_112_in_classBody431_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_108_in_interfaceBody443_bits[]	= { ANTLR_UINT64_LIT(0x5421800000004080), ANTLR_UINT64_LIT(0x00010644EE3C1446) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_108_in_interfaceBody443( FOLLOW_108_in_interfaceBody443_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceBodyDeclaration_in_interfaceBody445_bits[]	= { ANTLR_UINT64_LIT(0x5421800000004080), ANTLR_UINT64_LIT(0x00010644EE3C1446) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceBodyDeclaration_in_interfaceBody445( FOLLOW_interfaceBodyDeclaration_in_interfaceBody445_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_112_in_interfaceBody448_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_112_in_interfaceBody448( FOLLOW_112_in_interfaceBody448_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_classBodyDeclaration459_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_classBodyDeclaration459( FOLLOW_47_in_classBodyDeclaration459_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_94_in_classBodyDeclaration464_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000100000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_94_in_classBodyDeclaration464( FOLLOW_94_in_classBodyDeclaration464_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_block_in_classBodyDeclaration467_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_block_in_classBodyDeclaration467( FOLLOW_block_in_classBodyDeclaration467_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_modifier_in_classBodyDeclaration472_bits[]	= { ANTLR_UINT64_LIT(0x5421000000004080), ANTLR_UINT64_LIT(0x00000644EE3C1446) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_modifier_in_classBodyDeclaration472( FOLLOW_modifier_in_classBodyDeclaration472_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_memberDecl_in_classBodyDeclaration475_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_memberDecl_in_classBodyDeclaration475( FOLLOW_memberDecl_in_classBodyDeclaration475_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_genericMethodOrConstructorDecl_in_memberDecl487_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_genericMethodOrConstructorDecl_in_memberDecl487( FOLLOW_genericMethodOrConstructorDecl_in_memberDecl487_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_methodDeclaration_in_memberDecl492_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_methodDeclaration_in_memberDecl492( FOLLOW_methodDeclaration_in_memberDecl492_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_fieldDeclaration_in_memberDecl497_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_fieldDeclaration_in_memberDecl497( FOLLOW_fieldDeclaration_in_memberDecl497_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_105_in_memberDecl502_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_105_in_memberDecl502( FOLLOW_105_in_memberDecl502_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_memberDecl504_bits[]	= { ANTLR_UINT64_LIT(0x0000000080000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_memberDecl504( FOLLOW_Identifier_in_memberDecl504_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_voidMethodDeclaratorRest_in_memberDecl506_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_voidMethodDeclaratorRest_in_memberDecl506( FOLLOW_voidMethodDeclaratorRest_in_memberDecl506_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_memberDecl511_bits[]	= { ANTLR_UINT64_LIT(0x0000000080000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_memberDecl511( FOLLOW_Identifier_in_memberDecl511_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_constructorDeclaratorRest_in_memberDecl513_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_constructorDeclaratorRest_in_memberDecl513( FOLLOW_constructorDeclaratorRest_in_memberDecl513_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceDeclaration_in_memberDecl518_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceDeclaration_in_memberDecl518( FOLLOW_interfaceDeclaration_in_memberDecl518_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_classDeclaration_in_memberDecl523_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_classDeclaration_in_memberDecl523( FOLLOW_classDeclaration_in_memberDecl523_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeParameters_in_genericMethodOrConstructorDecl535_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000020020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeParameters_in_genericMethodOrConstructorDecl535( FOLLOW_typeParameters_in_genericMethodOrConstructorDecl535_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl537_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl537( FOLLOW_genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl537_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_genericMethodOrConstructorRest550_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_genericMethodOrConstructorRest550( FOLLOW_type_in_genericMethodOrConstructorRest550_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_105_in_genericMethodOrConstructorRest554_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_105_in_genericMethodOrConstructorRest554( FOLLOW_105_in_genericMethodOrConstructorRest554_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_genericMethodOrConstructorRest557_bits[]	= { ANTLR_UINT64_LIT(0x0000000080000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_genericMethodOrConstructorRest557( FOLLOW_Identifier_in_genericMethodOrConstructorRest557_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_methodDeclaratorRest_in_genericMethodOrConstructorRest559_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_methodDeclaratorRest_in_genericMethodOrConstructorRest559( FOLLOW_methodDeclaratorRest_in_genericMethodOrConstructorRest559_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_genericMethodOrConstructorRest564_bits[]	= { ANTLR_UINT64_LIT(0x0000000080000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_genericMethodOrConstructorRest564( FOLLOW_Identifier_in_genericMethodOrConstructorRest564_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_constructorDeclaratorRest_in_genericMethodOrConstructorRest566_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_constructorDeclaratorRest_in_genericMethodOrConstructorRest566( FOLLOW_constructorDeclaratorRest_in_genericMethodOrConstructorRest566_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_methodDeclaration577_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_methodDeclaration577( FOLLOW_type_in_methodDeclaration577_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_methodDeclaration579_bits[]	= { ANTLR_UINT64_LIT(0x0000000080000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_methodDeclaration579( FOLLOW_Identifier_in_methodDeclaration579_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_methodDeclaratorRest_in_methodDeclaration581_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_methodDeclaratorRest_in_methodDeclaration581( FOLLOW_methodDeclaratorRest_in_methodDeclaration581_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_fieldDeclaration592_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_fieldDeclaration592( FOLLOW_type_in_fieldDeclaration592_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableDeclarators_in_fieldDeclaration594_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableDeclarators_in_fieldDeclaration594( FOLLOW_variableDeclarators_in_fieldDeclaration594_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_fieldDeclaration596_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_fieldDeclaration596( FOLLOW_47_in_fieldDeclaration596_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_modifier_in_interfaceBodyDeclaration609_bits[]	= { ANTLR_UINT64_LIT(0x5421000000004080), ANTLR_UINT64_LIT(0x00000644EE3C1446) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_modifier_in_interfaceBodyDeclaration609( FOLLOW_modifier_in_interfaceBodyDeclaration609_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceMemberDecl_in_interfaceBodyDeclaration612_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceMemberDecl_in_interfaceBodyDeclaration612( FOLLOW_interfaceMemberDecl_in_interfaceBodyDeclaration612_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_interfaceBodyDeclaration619_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_interfaceBodyDeclaration619( FOLLOW_47_in_interfaceBodyDeclaration619_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceMethodOrFieldDecl_in_interfaceMemberDecl630_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceMethodOrFieldDecl_in_interfaceMemberDecl630( FOLLOW_interfaceMethodOrFieldDecl_in_interfaceMemberDecl630_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceGenericMethodDecl_in_interfaceMemberDecl637_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceGenericMethodDecl_in_interfaceMemberDecl637( FOLLOW_interfaceGenericMethodDecl_in_interfaceMemberDecl637_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_105_in_interfaceMemberDecl647_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_105_in_interfaceMemberDecl647( FOLLOW_105_in_interfaceMemberDecl647_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_interfaceMemberDecl649_bits[]	= { ANTLR_UINT64_LIT(0x0000000080000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_interfaceMemberDecl649( FOLLOW_Identifier_in_interfaceMemberDecl649_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_voidInterfaceMethodDeclaratorRest_in_interfaceMemberDecl651_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_voidInterfaceMethodDeclaratorRest_in_interfaceMemberDecl651( FOLLOW_voidInterfaceMethodDeclaratorRest_in_interfaceMemberDecl651_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceDeclaration_in_interfaceMemberDecl661_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceDeclaration_in_interfaceMemberDecl661( FOLLOW_interfaceDeclaration_in_interfaceMemberDecl661_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_classDeclaration_in_interfaceMemberDecl671_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_classDeclaration_in_interfaceMemberDecl671( FOLLOW_classDeclaration_in_interfaceMemberDecl671_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_interfaceMethodOrFieldDecl683_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_interfaceMethodOrFieldDecl683( FOLLOW_type_in_interfaceMethodOrFieldDecl683_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_interfaceMethodOrFieldDecl685_bits[]	= { ANTLR_UINT64_LIT(0x0042000080000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_interfaceMethodOrFieldDecl685( FOLLOW_Identifier_in_interfaceMethodOrFieldDecl685_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceMethodOrFieldRest_in_interfaceMethodOrFieldDecl687_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceMethodOrFieldRest_in_interfaceMethodOrFieldDecl687( FOLLOW_interfaceMethodOrFieldRest_in_interfaceMethodOrFieldDecl687_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_constantDeclaratorsRest_in_interfaceMethodOrFieldRest699_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_constantDeclaratorsRest_in_interfaceMethodOrFieldRest699( FOLLOW_constantDeclaratorsRest_in_interfaceMethodOrFieldRest699_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_interfaceMethodOrFieldRest701_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_interfaceMethodOrFieldRest701( FOLLOW_47_in_interfaceMethodOrFieldRest701_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceMethodDeclaratorRest_in_interfaceMethodOrFieldRest706_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceMethodDeclaratorRest_in_interfaceMethodOrFieldRest706( FOLLOW_interfaceMethodDeclaratorRest_in_interfaceMethodOrFieldRest706_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_formalParameters_in_methodDeclaratorRest718_bits[]	= { ANTLR_UINT64_LIT(0x0040800000000000), ANTLR_UINT64_LIT(0x0000102000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_formalParameters_in_methodDeclaratorRest718( FOLLOW_formalParameters_in_methodDeclaratorRest718_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_54_in_methodDeclaratorRest721_bits[]	= { ANTLR_UINT64_LIT(0x0080000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_54_in_methodDeclaratorRest721( FOLLOW_54_in_methodDeclaratorRest721_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_55_in_methodDeclaratorRest723_bits[]	= { ANTLR_UINT64_LIT(0x0040800000000000), ANTLR_UINT64_LIT(0x0000102000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_55_in_methodDeclaratorRest723( FOLLOW_55_in_methodDeclaratorRest723_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_101_in_methodDeclaratorRest736_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_101_in_methodDeclaratorRest736( FOLLOW_101_in_methodDeclaratorRest736_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_qualifiedNameList_in_methodDeclaratorRest738_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000), ANTLR_UINT64_LIT(0x0000100000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_qualifiedNameList_in_methodDeclaratorRest738( FOLLOW_qualifiedNameList_in_methodDeclaratorRest738_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_methodBody_in_methodDeclaratorRest754_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_methodBody_in_methodDeclaratorRest754( FOLLOW_methodBody_in_methodDeclaratorRest754_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_methodDeclaratorRest768_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_methodDeclaratorRest768( FOLLOW_47_in_methodDeclaratorRest768_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_formalParameters_in_voidMethodDeclaratorRest790_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000), ANTLR_UINT64_LIT(0x0000102000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_formalParameters_in_voidMethodDeclaratorRest790( FOLLOW_formalParameters_in_voidMethodDeclaratorRest790_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_101_in_voidMethodDeclaratorRest793_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_101_in_voidMethodDeclaratorRest793( FOLLOW_101_in_voidMethodDeclaratorRest793_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_qualifiedNameList_in_voidMethodDeclaratorRest795_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000), ANTLR_UINT64_LIT(0x0000100000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_qualifiedNameList_in_voidMethodDeclaratorRest795( FOLLOW_qualifiedNameList_in_voidMethodDeclaratorRest795_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_methodBody_in_voidMethodDeclaratorRest811_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_methodBody_in_voidMethodDeclaratorRest811( FOLLOW_methodBody_in_voidMethodDeclaratorRest811_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_voidMethodDeclaratorRest825_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_voidMethodDeclaratorRest825( FOLLOW_47_in_voidMethodDeclaratorRest825_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_formalParameters_in_interfaceMethodDeclaratorRest847_bits[]	= { ANTLR_UINT64_LIT(0x0040800000000000), ANTLR_UINT64_LIT(0x0000002000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_formalParameters_in_interfaceMethodDeclaratorRest847( FOLLOW_formalParameters_in_interfaceMethodDeclaratorRest847_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_54_in_interfaceMethodDeclaratorRest850_bits[]	= { ANTLR_UINT64_LIT(0x0080000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_54_in_interfaceMethodDeclaratorRest850( FOLLOW_54_in_interfaceMethodDeclaratorRest850_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_55_in_interfaceMethodDeclaratorRest852_bits[]	= { ANTLR_UINT64_LIT(0x0040800000000000), ANTLR_UINT64_LIT(0x0000002000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_55_in_interfaceMethodDeclaratorRest852( FOLLOW_55_in_interfaceMethodDeclaratorRest852_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_101_in_interfaceMethodDeclaratorRest857_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_101_in_interfaceMethodDeclaratorRest857( FOLLOW_101_in_interfaceMethodDeclaratorRest857_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_qualifiedNameList_in_interfaceMethodDeclaratorRest859_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_qualifiedNameList_in_interfaceMethodDeclaratorRest859( FOLLOW_qualifiedNameList_in_interfaceMethodDeclaratorRest859_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_interfaceMethodDeclaratorRest863_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_interfaceMethodDeclaratorRest863( FOLLOW_47_in_interfaceMethodDeclaratorRest863_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeParameters_in_interfaceGenericMethodDecl875_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000020020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeParameters_in_interfaceGenericMethodDecl875( FOLLOW_typeParameters_in_interfaceGenericMethodDecl875_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_interfaceGenericMethodDecl878_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_interfaceGenericMethodDecl878( FOLLOW_type_in_interfaceGenericMethodDecl878_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_105_in_interfaceGenericMethodDecl882_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_105_in_interfaceGenericMethodDecl882( FOLLOW_105_in_interfaceGenericMethodDecl882_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_interfaceGenericMethodDecl885_bits[]	= { ANTLR_UINT64_LIT(0x0000000080000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_interfaceGenericMethodDecl885( FOLLOW_Identifier_in_interfaceGenericMethodDecl885_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl895_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl895( FOLLOW_interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl895_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_formalParameters_in_voidInterfaceMethodDeclaratorRest907_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000), ANTLR_UINT64_LIT(0x0000002000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_formalParameters_in_voidInterfaceMethodDeclaratorRest907( FOLLOW_formalParameters_in_voidInterfaceMethodDeclaratorRest907_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_101_in_voidInterfaceMethodDeclaratorRest910_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_101_in_voidInterfaceMethodDeclaratorRest910( FOLLOW_101_in_voidInterfaceMethodDeclaratorRest910_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_qualifiedNameList_in_voidInterfaceMethodDeclaratorRest912_bits[]	= { ANTLR_UINT64_LIT(0x0000800000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_qualifiedNameList_in_voidInterfaceMethodDeclaratorRest912( FOLLOW_qualifiedNameList_in_voidInterfaceMethodDeclaratorRest912_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_47_in_voidInterfaceMethodDeclaratorRest916_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_47_in_voidInterfaceMethodDeclaratorRest916( FOLLOW_47_in_voidInterfaceMethodDeclaratorRest916_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_formalParameters_in_constructorDeclaratorRest928_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000102000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_formalParameters_in_constructorDeclaratorRest928( FOLLOW_formalParameters_in_constructorDeclaratorRest928_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_101_in_constructorDeclaratorRest931_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_101_in_constructorDeclaratorRest931( FOLLOW_101_in_constructorDeclaratorRest931_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_qualifiedNameList_in_constructorDeclaratorRest933_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0000100000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_qualifiedNameList_in_constructorDeclaratorRest933( FOLLOW_qualifiedNameList_in_constructorDeclaratorRest933_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_methodBody_in_constructorDeclaratorRest937_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_methodBody_in_constructorDeclaratorRest937( FOLLOW_methodBody_in_constructorDeclaratorRest937_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_constantDeclarator948_bits[]	= { ANTLR_UINT64_LIT(0x0042000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_constantDeclarator948( FOLLOW_Identifier_in_constantDeclarator948_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_constantDeclaratorRest_in_constantDeclarator950_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_constantDeclaratorRest_in_constantDeclarator950( FOLLOW_constantDeclaratorRest_in_constantDeclarator950_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableDeclarator_in_variableDeclarators962_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableDeclarator_in_variableDeclarators962( FOLLOW_variableDeclarator_in_variableDeclarators962_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_variableDeclarators965_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_variableDeclarators965( FOLLOW_38_in_variableDeclarators965_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableDeclarator_in_variableDeclarators967_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableDeclarator_in_variableDeclarators967( FOLLOW_variableDeclarator_in_variableDeclarators967_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_variableDeclarator980_bits[]	= { ANTLR_UINT64_LIT(0x0042000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_variableDeclarator980( FOLLOW_Identifier_in_variableDeclarator980_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableDeclaratorRest_in_variableDeclarator982_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableDeclaratorRest_in_variableDeclarator982( FOLLOW_variableDeclaratorRest_in_variableDeclarator982_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_54_in_variableDeclaratorRest995_bits[]	= { ANTLR_UINT64_LIT(0x0080000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_54_in_variableDeclaratorRest995( FOLLOW_54_in_variableDeclaratorRest995_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_55_in_variableDeclaratorRest997_bits[]	= { ANTLR_UINT64_LIT(0x0042000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_55_in_variableDeclaratorRest997( FOLLOW_55_in_variableDeclaratorRest997_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_49_in_variableDeclaratorRest1002_bits[]	= { ANTLR_UINT64_LIT(0x5001019881306860), ANTLR_UINT64_LIT(0x0002128920D41242) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_49_in_variableDeclaratorRest1002( FOLLOW_49_in_variableDeclaratorRest1002_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableInitializer_in_variableDeclaratorRest1004_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableInitializer_in_variableDeclaratorRest1004( FOLLOW_variableInitializer_in_variableDeclaratorRest1004_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_49_in_variableDeclaratorRest1011_bits[]	= { ANTLR_UINT64_LIT(0x5001019881306860), ANTLR_UINT64_LIT(0x0002128920D41242) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_49_in_variableDeclaratorRest1011( FOLLOW_49_in_variableDeclaratorRest1011_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableInitializer_in_variableDeclaratorRest1013_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableInitializer_in_variableDeclaratorRest1013( FOLLOW_variableInitializer_in_variableDeclaratorRest1013_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_constantDeclaratorRest_in_constantDeclaratorsRest1033_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_constantDeclaratorRest_in_constantDeclaratorsRest1033( FOLLOW_constantDeclaratorRest_in_constantDeclaratorsRest1033_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_constantDeclaratorsRest1036_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_constantDeclaratorsRest1036( FOLLOW_38_in_constantDeclaratorsRest1036_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_constantDeclarator_in_constantDeclaratorsRest1038_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_constantDeclarator_in_constantDeclaratorsRest1038( FOLLOW_constantDeclarator_in_constantDeclaratorsRest1038_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_54_in_constantDeclaratorRest1055_bits[]	= { ANTLR_UINT64_LIT(0x0080000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_54_in_constantDeclaratorRest1055( FOLLOW_54_in_constantDeclaratorRest1055_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_55_in_constantDeclaratorRest1057_bits[]	= { ANTLR_UINT64_LIT(0x0042000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_55_in_constantDeclaratorRest1057( FOLLOW_55_in_constantDeclaratorRest1057_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_49_in_constantDeclaratorRest1061_bits[]	= { ANTLR_UINT64_LIT(0x5001019881306860), ANTLR_UINT64_LIT(0x0002128920D41242) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_49_in_constantDeclaratorRest1061( FOLLOW_49_in_constantDeclaratorRest1061_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableInitializer_in_constantDeclaratorRest1063_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableInitializer_in_constantDeclaratorRest1063( FOLLOW_variableInitializer_in_constantDeclaratorRest1063_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_variableDeclaratorId1075_bits[]	= { ANTLR_UINT64_LIT(0x0040000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_variableDeclaratorId1075( FOLLOW_Identifier_in_variableDeclaratorId1075_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_54_in_variableDeclaratorId1078_bits[]	= { ANTLR_UINT64_LIT(0x0080000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_54_in_variableDeclaratorId1078( FOLLOW_54_in_variableDeclaratorId1078_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_55_in_variableDeclaratorId1080_bits[]	= { ANTLR_UINT64_LIT(0x0040000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_55_in_variableDeclaratorId1080( FOLLOW_55_in_variableDeclaratorId1080_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_arrayInitializer_in_variableInitializer1093_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_arrayInitializer_in_variableInitializer1093( FOLLOW_arrayInitializer_in_variableInitializer1093_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_expression_in_variableInitializer1103_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_expression_in_variableInitializer1103( FOLLOW_expression_in_variableInitializer1103_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_108_in_arrayInitializer1115_bits[]	= { ANTLR_UINT64_LIT(0x5001019881306860), ANTLR_UINT64_LIT(0x0003128920D41242) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_108_in_arrayInitializer1115( FOLLOW_108_in_arrayInitializer1115_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableInitializer_in_arrayInitializer1118_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000000), ANTLR_UINT64_LIT(0x0001000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableInitializer_in_arrayInitializer1118( FOLLOW_variableInitializer_in_arrayInitializer1118_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_arrayInitializer1121_bits[]	= { ANTLR_UINT64_LIT(0x5001019881306860), ANTLR_UINT64_LIT(0x0002128920D41242) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_arrayInitializer1121( FOLLOW_38_in_arrayInitializer1121_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableInitializer_in_arrayInitializer1123_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000000), ANTLR_UINT64_LIT(0x0001000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableInitializer_in_arrayInitializer1123( FOLLOW_variableInitializer_in_arrayInitializer1123_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_arrayInitializer1128_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000000), ANTLR_UINT64_LIT(0x0001000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_arrayInitializer1128( FOLLOW_38_in_arrayInitializer1128_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_112_in_arrayInitializer1135_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_112_in_arrayInitializer1135( FOLLOW_112_in_arrayInitializer1135_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_annotation_in_modifier1151_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_annotation_in_modifier1151( FOLLOW_annotation_in_modifier1151_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_91_in_modifier1161_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_91_in_modifier1161( FOLLOW_91_in_modifier1161_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_90_in_modifier1171_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_90_in_modifier1171( FOLLOW_90_in_modifier1171_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_89_in_modifier1181_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_89_in_modifier1181( FOLLOW_89_in_modifier1181_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_94_in_modifier1191_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_94_in_modifier1191( FOLLOW_94_in_modifier1191_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_58_in_modifier1201_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_58_in_modifier1201( FOLLOW_58_in_modifier1201_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_74_in_modifier1211_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_74_in_modifier1211( FOLLOW_74_in_modifier1211_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_85_in_modifier1221_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_85_in_modifier1221( FOLLOW_85_in_modifier1221_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_98_in_modifier1231_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_98_in_modifier1231( FOLLOW_98_in_modifier1231_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_102_in_modifier1241_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_102_in_modifier1241( FOLLOW_102_in_modifier1241_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_106_in_modifier1251_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_106_in_modifier1251( FOLLOW_106_in_modifier1251_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_95_in_modifier1261_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_95_in_modifier1261( FOLLOW_95_in_modifier1261_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_packageOrTypeName1275_bits[]	= { ANTLR_UINT64_LIT(0x0000040000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_packageOrTypeName1275( FOLLOW_Identifier_in_packageOrTypeName1275_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_42_in_packageOrTypeName1278_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_42_in_packageOrTypeName1278( FOLLOW_42_in_packageOrTypeName1278_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_packageOrTypeName1280_bits[]	= { ANTLR_UINT64_LIT(0x0000040000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_packageOrTypeName1280( FOLLOW_Identifier_in_packageOrTypeName1280_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_enumConstantName1298_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_enumConstantName1298( FOLLOW_Identifier_in_enumConstantName1298_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_typeName1314_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_typeName1314( FOLLOW_Identifier_in_typeName1314_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_packageOrTypeName_in_typeName1324_bits[]	= { ANTLR_UINT64_LIT(0x0000040000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_packageOrTypeName_in_typeName1324( FOLLOW_packageOrTypeName_in_typeName1324_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_42_in_typeName1326_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_42_in_typeName1326( FOLLOW_42_in_typeName1326_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_typeName1328_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_typeName1328( FOLLOW_Identifier_in_typeName1328_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_type1339_bits[]	= { ANTLR_UINT64_LIT(0x0041040000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_type1339( FOLLOW_Identifier_in_type1339_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeArguments_in_type1342_bits[]	= { ANTLR_UINT64_LIT(0x0040040000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeArguments_in_type1342( FOLLOW_typeArguments_in_type1342_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_42_in_type1347_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_42_in_type1347( FOLLOW_42_in_type1347_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_type1349_bits[]	= { ANTLR_UINT64_LIT(0x0041040000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_type1349( FOLLOW_Identifier_in_type1349_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeArguments_in_type1352_bits[]	= { ANTLR_UINT64_LIT(0x0040040000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeArguments_in_type1352( FOLLOW_typeArguments_in_type1352_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_54_in_type1360_bits[]	= { ANTLR_UINT64_LIT(0x0080000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_54_in_type1360( FOLLOW_54_in_type1360_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_55_in_type1362_bits[]	= { ANTLR_UINT64_LIT(0x0040000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_55_in_type1362( FOLLOW_55_in_type1362_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_primitiveType_in_type1369_bits[]	= { ANTLR_UINT64_LIT(0x0040000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_primitiveType_in_type1369( FOLLOW_primitiveType_in_type1369_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_54_in_type1372_bits[]	= { ANTLR_UINT64_LIT(0x0080000000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_54_in_type1372( FOLLOW_54_in_type1372_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_55_in_type1374_bits[]	= { ANTLR_UINT64_LIT(0x0040000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_55_in_type1374( FOLLOW_55_in_type1374_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_74_in_variableModifier1462_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_74_in_variableModifier1462( FOLLOW_74_in_variableModifier1462_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_annotation_in_variableModifier1472_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_annotation_in_variableModifier1472( FOLLOW_annotation_in_variableModifier1472_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_48_in_typeArguments1483_bits[]	= { ANTLR_UINT64_LIT(0x5010000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_48_in_typeArguments1483( FOLLOW_48_in_typeArguments1483_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeArgument_in_typeArguments1485_bits[]	= { ANTLR_UINT64_LIT(0x0008004000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeArgument_in_typeArguments1485( FOLLOW_typeArgument_in_typeArguments1485_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_typeArguments1488_bits[]	= { ANTLR_UINT64_LIT(0x5010000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_typeArguments1488( FOLLOW_38_in_typeArguments1488_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_typeArgument_in_typeArguments1490_bits[]	= { ANTLR_UINT64_LIT(0x0008004000000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_typeArgument_in_typeArguments1490( FOLLOW_typeArgument_in_typeArguments1490_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_51_in_typeArguments1494_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_51_in_typeArguments1494( FOLLOW_51_in_typeArguments1494_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_typeArgument1506_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_typeArgument1506( FOLLOW_type_in_typeArgument1506_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_52_in_typeArgument1511_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002), ANTLR_UINT64_LIT(0x0000000100000100) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_52_in_typeArgument1511( FOLLOW_52_in_typeArgument1511_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_set_in_typeArgument1514_bits[]	= { ANTLR_UINT64_LIT(0x5000000000004000), ANTLR_UINT64_LIT(0x0000000020141042) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_set_in_typeArgument1514( FOLLOW_set_in_typeArgument1514_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_typeArgument1522_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_typeArgument1522( FOLLOW_type_in_typeArgument1522_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_qualifiedName_in_qualifiedNameList1536_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_qualifiedName_in_qualifiedNameList1536( FOLLOW_qualifiedName_in_qualifiedNameList1536_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_qualifiedNameList1539_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_qualifiedNameList1539( FOLLOW_38_in_qualifiedNameList1539_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_qualifiedName_in_qualifiedNameList1541_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_qualifiedName_in_qualifiedNameList1541( FOLLOW_qualifiedName_in_qualifiedNameList1541_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_31_in_formalParameters1555_bits[]	= { ANTLR_UINT64_LIT(0x5020000100004000), ANTLR_UINT64_LIT(0x0000000020141442) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_31_in_formalParameters1555( FOLLOW_31_in_formalParameters1555_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_formalParameterDecls_in_formalParameters1557_bits[]	= { ANTLR_UINT64_LIT(0x0000000100000000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_formalParameterDecls_in_formalParameters1557( FOLLOW_formalParameterDecls_in_formalParameters1557_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_32_in_formalParameters1560_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_32_in_formalParameters1560( FOLLOW_32_in_formalParameters1560_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableModifier_in_formalParameterDecls1572_bits[]	= { ANTLR_UINT64_LIT(0x5020000000004000), ANTLR_UINT64_LIT(0x0000000020141442) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableModifier_in_formalParameterDecls1572( FOLLOW_variableModifier_in_formalParameterDecls1572_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_type_in_formalParameterDecls1575_bits[]	= { ANTLR_UINT64_LIT(0x0000080000004002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_type_in_formalParameterDecls1575( FOLLOW_type_in_formalParameterDecls1575_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_formalParameterDeclsRest_in_formalParameterDecls1577_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_formalParameterDeclsRest_in_formalParameterDecls1577( FOLLOW_formalParameterDeclsRest_in_formalParameterDecls1577_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest1590_bits[]	= { ANTLR_UINT64_LIT(0x0000004000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest1590( FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest1590_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_38_in_formalParameterDeclsRest1593_bits[]	= { ANTLR_UINT64_LIT(0x5020000000004000), ANTLR_UINT64_LIT(0x0000000020141442) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_38_in_formalParameterDeclsRest1593( FOLLOW_38_in_formalParameterDeclsRest1593_bits, 2 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_formalParameterDecls_in_formalParameterDeclsRest1595_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_formalParameterDecls_in_formalParameterDeclsRest1595( FOLLOW_formalParameterDecls_in_formalParameterDeclsRest1595_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_43_in_formalParameterDeclsRest1604_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_43_in_formalParameterDeclsRest1604( FOLLOW_43_in_formalParameterDeclsRest1604_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest1606_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest1606( FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest1606_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_qualifiedName1618_bits[]	= { ANTLR_UINT64_LIT(0x0000040000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_qualifiedName1618( FOLLOW_Identifier_in_qualifiedName1618_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_42_in_qualifiedName1621_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_42_in_qualifiedName1621( FOLLOW_42_in_qualifiedName1621_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_qualifiedName1623_bits[]	= { ANTLR_UINT64_LIT(0x0000040000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_qualifiedName1623( FOLLOW_Identifier_in_qualifiedName1623_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_methodDeclaration_in_synpred34_JavaDecl492_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_methodDeclaration_in_synpred34_JavaDecl492( FOLLOW_methodDeclaration_in_synpred34_JavaDecl492_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_fieldDeclaration_in_synpred35_JavaDecl497_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_fieldDeclaration_in_synpred35_JavaDecl497( FOLLOW_fieldDeclaration_in_synpred35_JavaDecl497_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_42_in_synpred81_JavaDecl1278_bits[]	= { ANTLR_UINT64_LIT(0x0000000000004000) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_42_in_synpred81_JavaDecl1278( FOLLOW_42_in_synpred81_JavaDecl1278_bits, 1 );
/** Bitset defining follow set for error recovery in rule state: Java_JavaDecl  */
static	ANTLR_BITWORD FOLLOW_Identifier_in_synpred81_JavaDecl1280_bits[]	= { ANTLR_UINT64_LIT(0x0000000000000002) };
static  Java_JavaDeclImplTraits::BitsetListType FOLLOW_Identifier_in_synpred81_JavaDecl1280( FOLLOW_Identifier_in_synpred81_JavaDecl1280_bits, 1 );


/* ==============================================
 * Parsing rules
 */
/**
 * $ANTLR start packageDeclaration
 * JavaDecl.g:11:1: packageDeclaration : 'package' qualifiedName ';' ;
 */
void
Java_JavaDecl::packageDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER packageDeclaration_StartIndex;

    /* Initialize rule variables
     */
    packageDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(1)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:12:2: ( 'package' qualifiedName ';' )
        // JavaDecl.g:12:4: 'package' qualifiedName ';'
        {
             this->matchToken(88, &FOLLOW_88_in_packageDeclaration23);
            if  (this->hasException())
            {
                goto rulepackageDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_qualifiedName_in_packageDeclaration25);
            qualifiedName();

            this->followPop();
            if  (this->hasException())
            {
                goto rulepackageDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


             this->matchToken(47, &FOLLOW_47_in_packageDeclaration27);
            if  (this->hasException())
            {
                goto rulepackageDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto rulepackageDeclarationEx; /* Prevent compiler warnings */
    rulepackageDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(1, packageDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end packageDeclaration */

/**
 * $ANTLR start importDeclaration
 * JavaDecl.g:15:1: importDeclaration : 'import' ( 'static' )? Identifier ( '.' Identifier )* ( '.' '*' )? ';' ;
 */
void
Java_JavaDecl::importDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER importDeclaration_StartIndex;

    /* Initialize rule variables
     */
    importDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(2)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:16:2: ( 'import' ( 'static' )? Identifier ( '.' Identifier )* ( '.' '*' )? ';' )
        // JavaDecl.g:16:4: 'import' ( 'static' )? Identifier ( '.' Identifier )* ( '.' '*' )? ';'
        {
             this->matchToken(80, &FOLLOW_80_in_importDeclaration39);
            if  (this->hasException())
            {
                goto ruleimportDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:16:13: ( 'static' )?
            {
                int alt1=2;
                switch ( this->LA(1) )
                {
                    case 94:
                    	{
                    		alt1=1;
                    	}
                        break;
                }

                switch (alt1)
                {
            	case 1:
            	    // JavaDecl.g:16:13: 'static'
            	    {
            	         this->matchToken(94, &FOLLOW_94_in_importDeclaration41);
            	        if  (this->hasException())
            	        {
            	            goto ruleimportDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

             this->matchToken(Identifier, &FOLLOW_Identifier_in_importDeclaration44);
            if  (this->hasException())
            {
                goto ruleimportDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:16:34: ( '.' Identifier )*

            for (;;)
            {
                int alt2=2;
                switch ( this->LA(1) )
                {
                case 42:
                	{
                		switch ( this->LA(2) )
                		{
                		case Identifier:
                			{
                				alt2=1;
                			}
                		    break;

                		}

                	}
                    break;

                }

                switch (alt2)
                {
            	case 1:
            	    // JavaDecl.g:16:35: '.' Identifier
            	    {
            	         this->matchToken(42, &FOLLOW_42_in_importDeclaration47);
            	        if  (this->hasException())
            	        {
            	            goto ruleimportDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	         this->matchToken(Identifier, &FOLLOW_Identifier_in_importDeclaration49);
            	        if  (this->hasException())
            	        {
            	            goto ruleimportDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop2;	/* break out of the loop */
            	    break;
                }
            }
            loop2: ; /* Jump out to here if this rule does not match */


            // JavaDecl.g:16:52: ( '.' '*' )?
            {
                int alt3=2;
                switch ( this->LA(1) )
                {
                    case 42:
                    	{
                    		alt3=1;
                    	}
                        break;
                }

                switch (alt3)
                {
            	case 1:
            	    // JavaDecl.g:16:53: '.' '*'
            	    {
            	         this->matchToken(42, &FOLLOW_42_in_importDeclaration54);
            	        if  (this->hasException())
            	        {
            	            goto ruleimportDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	         this->matchToken(33, &FOLLOW_33_in_importDeclaration56);
            	        if  (this->hasException())
            	        {
            	            goto ruleimportDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

             this->matchToken(47, &FOLLOW_47_in_importDeclaration60);
            if  (this->hasException())
            {
                goto ruleimportDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleimportDeclarationEx; /* Prevent compiler warnings */
    ruleimportDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(2, importDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end importDeclaration */

/**
 * $ANTLR start typeDeclaration
 * JavaDecl.g:19:1: typeDeclaration : ( classOrInterfaceDeclaration | ';' );
 */
void
Java_JavaDecl::typeDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER typeDeclaration_StartIndex;

    /* Initialize rule variables
     */
    typeDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(3)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:20:2: ( classOrInterfaceDeclaration | ';' )

            ANTLR_UINT32 alt4;

            alt4=2;

            switch ( this->LA(1) )
            {
            case ENUM:
            case 53:
            case 58:
            case 66:
            case 74:
            case 83:
            case 85:
            case 89:
            case 90:
            case 91:
            case 94:
            case 95:
            case 98:
            case 102:
            case 106:
            	{
            		alt4=1;
            	}
                break;
            case 47:
            	{
            		alt4=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 4 );
                ex->set_state( 0 );


                goto ruletypeDeclarationEx;

            }

            switch (alt4)
            {
        	case 1:
        	    // JavaDecl.g:20:4: classOrInterfaceDeclaration
        	    {
        	        this->followPush(FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration73);
        	        classOrInterfaceDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruletypeDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:21:9: ';'
        	    {
        	         this->matchToken(47, &FOLLOW_47_in_typeDeclaration83);
        	        if  (this->hasException())
        	        {
        	            goto ruletypeDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruletypeDeclarationEx; /* Prevent compiler warnings */
    ruletypeDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(3, typeDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end typeDeclaration */

/**
 * $ANTLR start classOrInterfaceDeclaration
 * JavaDecl.g:24:1: classOrInterfaceDeclaration : ( modifier )* ( classDeclaration | interfaceDeclaration ) ;
 */
void
Java_JavaDecl::classOrInterfaceDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER classOrInterfaceDeclaration_StartIndex;

    /* Initialize rule variables
     */
    classOrInterfaceDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(4)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:25:2: ( ( modifier )* ( classDeclaration | interfaceDeclaration ) )
        // JavaDecl.g:25:4: ( modifier )* ( classDeclaration | interfaceDeclaration )
        {
            // JavaDecl.g:25:4: ( modifier )*

            for (;;)
            {
                int alt5=2;
                switch ( this->LA(1) )
                {
                case 53:
                	{
                		switch ( this->LA(2) )
                		{
                		case Identifier:
                			{
                				alt5=1;
                			}
                		    break;

                		}

                	}
                    break;
                case 58:
                case 74:
                case 85:
                case 89:
                case 90:
                case 91:
                case 94:
                case 95:
                case 98:
                case 102:
                case 106:
                	{
                		alt5=1;
                	}
                    break;

                }

                switch (alt5)
                {
            	case 1:
            	    // JavaDecl.g:25:4: modifier
            	    {
            	        this->followPush(FOLLOW_modifier_in_classOrInterfaceDeclaration95);
            	        modifier();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleclassOrInterfaceDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop5;	/* break out of the loop */
            	    break;
                }
            }
            loop5: ; /* Jump out to here if this rule does not match */


            // JavaDecl.g:25:14: ( classDeclaration | interfaceDeclaration )
            {
                int alt6=2;
                switch ( this->LA(1) )
                {
                case ENUM:
                case 66:
                	{
                		alt6=1;
                	}
                    break;
                case 53:
                case 83:
                	{
                		alt6=2;
                	}
                    break;

                default:
                    if (this->get_backtracking()>0)
                    {
                        this->set_failedflag( true );
                        return ;
                    }

                    ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                    ex->set_decisionNum( 6 );
                    ex->set_state( 0 );


                    goto ruleclassOrInterfaceDeclarationEx;

                }

                switch (alt6)
                {
            	case 1:
            	    // JavaDecl.g:25:15: classDeclaration
            	    {
            	        this->followPush(FOLLOW_classDeclaration_in_classOrInterfaceDeclaration99);
            	        classDeclaration();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleclassOrInterfaceDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;
            	case 2:
            	    // JavaDecl.g:25:34: interfaceDeclaration
            	    {
            	        this->followPush(FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration103);
            	        interfaceDeclaration();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleclassOrInterfaceDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

        }

    }
    // This is where rules clean up and exit
    //
    goto ruleclassOrInterfaceDeclarationEx; /* Prevent compiler warnings */
    ruleclassOrInterfaceDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(4, classOrInterfaceDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end classOrInterfaceDeclaration */

/**
 * $ANTLR start classDeclaration
 * JavaDecl.g:28:1: classDeclaration : ( normalClassDeclaration | enumDeclaration );
 */
void
Java_JavaDecl::classDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER classDeclaration_StartIndex;

    /* Initialize rule variables
     */
    classDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(5)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:29:2: ( normalClassDeclaration | enumDeclaration )

            ANTLR_UINT32 alt7;

            alt7=2;

            switch ( this->LA(1) )
            {
            case 66:
            	{
            		alt7=1;
            	}
                break;
            case ENUM:
            	{
            		alt7=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 7 );
                ex->set_state( 0 );


                goto ruleclassDeclarationEx;

            }

            switch (alt7)
            {
        	case 1:
        	    // JavaDecl.g:29:4: normalClassDeclaration
        	    {
        	        this->followPush(FOLLOW_normalClassDeclaration_in_classDeclaration116);
        	        normalClassDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleclassDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:30:9: enumDeclaration
        	    {
        	        this->followPush(FOLLOW_enumDeclaration_in_classDeclaration126);
        	        enumDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleclassDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruleclassDeclarationEx; /* Prevent compiler warnings */
    ruleclassDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(5, classDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end classDeclaration */

/**
 * $ANTLR start normalClassDeclaration
 * JavaDecl.g:33:1: normalClassDeclaration : 'class' Identifier ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody ;
 */
void
Java_JavaDecl::normalClassDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER normalClassDeclaration_StartIndex;

    /* Initialize rule variables
     */
    normalClassDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(6)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:34:2: ( 'class' Identifier ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody )
        // JavaDecl.g:34:4: 'class' Identifier ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody
        {
             this->matchToken(66, &FOLLOW_66_in_normalClassDeclaration138);
            if  (this->hasException())
            {
                goto rulenormalClassDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


             this->matchToken(Identifier, &FOLLOW_Identifier_in_normalClassDeclaration140);
            if  (this->hasException())
            {
                goto rulenormalClassDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:34:23: ( typeParameters )?
            {
                int alt8=2;
                switch ( this->LA(1) )
                {
                    case 48:
                    	{
                    		alt8=1;
                    	}
                        break;
                }

                switch (alt8)
                {
            	case 1:
            	    // JavaDecl.g:34:24: typeParameters
            	    {
            	        this->followPush(FOLLOW_typeParameters_in_normalClassDeclaration143);
            	        typeParameters();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulenormalClassDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            // JavaDecl.g:35:9: ( 'extends' type )?
            {
                int alt9=2;
                switch ( this->LA(1) )
                {
                    case 72:
                    	{
                    		alt9=1;
                    	}
                        break;
                }

                switch (alt9)
                {
            	case 1:
            	    // JavaDecl.g:35:10: 'extends' type
            	    {
            	         this->matchToken(72, &FOLLOW_72_in_normalClassDeclaration156);
            	        if  (this->hasException())
            	        {
            	            goto rulenormalClassDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_type_in_normalClassDeclaration158);
            	        type();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulenormalClassDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            // JavaDecl.g:36:9: ( 'implements' typeList )?
            {
                int alt10=2;
                switch ( this->LA(1) )
                {
                    case 79:
                    	{
                    		alt10=1;
                    	}
                        break;
                }

                switch (alt10)
                {
            	case 1:
            	    // JavaDecl.g:36:10: 'implements' typeList
            	    {
            	         this->matchToken(79, &FOLLOW_79_in_normalClassDeclaration171);
            	        if  (this->hasException())
            	        {
            	            goto rulenormalClassDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_typeList_in_normalClassDeclaration173);
            	        typeList();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulenormalClassDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            this->followPush(FOLLOW_classBody_in_normalClassDeclaration185);
            classBody();

            this->followPop();
            if  (this->hasException())
            {
                goto rulenormalClassDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto rulenormalClassDeclarationEx; /* Prevent compiler warnings */
    rulenormalClassDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(6, normalClassDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end normalClassDeclaration */

/**
 * $ANTLR start typeParameters
 * JavaDecl.g:40:1: typeParameters : '<' typeParameter ( ',' typeParameter )* '>' ;
 */
void
Java_JavaDecl::typeParameters()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER typeParameters_StartIndex;

    /* Initialize rule variables
     */
    typeParameters_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(7)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:41:2: ( '<' typeParameter ( ',' typeParameter )* '>' )
        // JavaDecl.g:41:4: '<' typeParameter ( ',' typeParameter )* '>'
        {
             this->matchToken(48, &FOLLOW_48_in_typeParameters197);
            if  (this->hasException())
            {
                goto ruletypeParametersEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_typeParameter_in_typeParameters199);
            typeParameter();

            this->followPop();
            if  (this->hasException())
            {
                goto ruletypeParametersEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:41:22: ( ',' typeParameter )*

            for (;;)
            {
                int alt11=2;
                switch ( this->LA(1) )
                {
                case 38:
                	{
                		alt11=1;
                	}
                    break;

                }

                switch (alt11)
                {
            	case 1:
            	    // JavaDecl.g:41:23: ',' typeParameter
            	    {
            	         this->matchToken(38, &FOLLOW_38_in_typeParameters202);
            	        if  (this->hasException())
            	        {
            	            goto ruletypeParametersEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_typeParameter_in_typeParameters204);
            	        typeParameter();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruletypeParametersEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop11;	/* break out of the loop */
            	    break;
                }
            }
            loop11: ; /* Jump out to here if this rule does not match */


             this->matchToken(51, &FOLLOW_51_in_typeParameters208);
            if  (this->hasException())
            {
                goto ruletypeParametersEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruletypeParametersEx; /* Prevent compiler warnings */
    ruletypeParametersEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(7, typeParameters_StartIndex); }

    return ;
}
/* $ANTLR end typeParameters */

/**
 * $ANTLR start typeParameter
 * JavaDecl.g:44:1: typeParameter : Identifier ( 'extends' bound )? ;
 */
void
Java_JavaDecl::typeParameter()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER typeParameter_StartIndex;

    /* Initialize rule variables
     */
    typeParameter_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(8)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:45:2: ( Identifier ( 'extends' bound )? )
        // JavaDecl.g:45:4: Identifier ( 'extends' bound )?
        {
             this->matchToken(Identifier, &FOLLOW_Identifier_in_typeParameter219);
            if  (this->hasException())
            {
                goto ruletypeParameterEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:45:15: ( 'extends' bound )?
            {
                int alt12=2;
                switch ( this->LA(1) )
                {
                    case 72:
                    	{
                    		alt12=1;
                    	}
                        break;
                }

                switch (alt12)
                {
            	case 1:
            	    // JavaDecl.g:45:16: 'extends' bound
            	    {
            	         this->matchToken(72, &FOLLOW_72_in_typeParameter222);
            	        if  (this->hasException())
            	        {
            	            goto ruletypeParameterEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_bound_in_typeParameter224);
            	        bound();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruletypeParameterEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

        }

    }
    // This is where rules clean up and exit
    //
    goto ruletypeParameterEx; /* Prevent compiler warnings */
    ruletypeParameterEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(8, typeParameter_StartIndex); }

    return ;
}
/* $ANTLR end typeParameter */

/**
 * $ANTLR start bound
 * JavaDecl.g:48:1: bound : type ( '&' type )* ;
 */
void
Java_JavaDecl::bound()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER bound_StartIndex;

    /* Initialize rule variables
     */
    bound_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(9)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:49:2: ( type ( '&' type )* )
        // JavaDecl.g:49:4: type ( '&' type )*
        {
            this->followPush(FOLLOW_type_in_bound239);
            type();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleboundEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:49:9: ( '&' type )*

            for (;;)
            {
                int alt13=2;
                switch ( this->LA(1) )
                {
                case 29:
                	{
                		alt13=1;
                	}
                    break;

                }

                switch (alt13)
                {
            	case 1:
            	    // JavaDecl.g:49:10: '&' type
            	    {
            	         this->matchToken(29, &FOLLOW_29_in_bound242);
            	        if  (this->hasException())
            	        {
            	            goto ruleboundEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_type_in_bound244);
            	        type();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleboundEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop13;	/* break out of the loop */
            	    break;
                }
            }
            loop13: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleboundEx; /* Prevent compiler warnings */
    ruleboundEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(9, bound_StartIndex); }

    return ;
}
/* $ANTLR end bound */

/**
 * $ANTLR start enumDeclaration
 * JavaDecl.g:52:1: enumDeclaration : ENUM Identifier ( 'implements' typeList )? enumBody ;
 */
void
Java_JavaDecl::enumDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER enumDeclaration_StartIndex;

    /* Initialize rule variables
     */
    enumDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(10)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:53:2: ( ENUM Identifier ( 'implements' typeList )? enumBody )
        // JavaDecl.g:53:4: ENUM Identifier ( 'implements' typeList )? enumBody
        {
             this->matchToken(ENUM, &FOLLOW_ENUM_in_enumDeclaration257);
            if  (this->hasException())
            {
                goto ruleenumDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


             this->matchToken(Identifier, &FOLLOW_Identifier_in_enumDeclaration259);
            if  (this->hasException())
            {
                goto ruleenumDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:53:20: ( 'implements' typeList )?
            {
                int alt14=2;
                switch ( this->LA(1) )
                {
                    case 79:
                    	{
                    		alt14=1;
                    	}
                        break;
                }

                switch (alt14)
                {
            	case 1:
            	    // JavaDecl.g:53:21: 'implements' typeList
            	    {
            	         this->matchToken(79, &FOLLOW_79_in_enumDeclaration262);
            	        if  (this->hasException())
            	        {
            	            goto ruleenumDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_typeList_in_enumDeclaration264);
            	        typeList();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleenumDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            this->followPush(FOLLOW_enumBody_in_enumDeclaration268);
            enumBody();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleenumDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleenumDeclarationEx; /* Prevent compiler warnings */
    ruleenumDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(10, enumDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end enumDeclaration */

/**
 * $ANTLR start enumBody
 * JavaDecl.g:56:1: enumBody : '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' ;
 */
void
Java_JavaDecl::enumBody()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER enumBody_StartIndex;

    /* Initialize rule variables
     */
    enumBody_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(11)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:57:2: ( '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' )
        // JavaDecl.g:57:4: '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}'
        {
             this->matchToken(108, &FOLLOW_108_in_enumBody280);
            if  (this->hasException())
            {
                goto ruleenumBodyEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:57:8: ( enumConstants )?
            {
                int alt15=2;
                switch ( this->LA(1) )
                {
                    case Identifier:
                    case 53:
                    	{
                    		alt15=1;
                    	}
                        break;
                }

                switch (alt15)
                {
            	case 1:
            	    // JavaDecl.g:57:8: enumConstants
            	    {
            	        this->followPush(FOLLOW_enumConstants_in_enumBody282);
            	        enumConstants();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleenumBodyEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            // JavaDecl.g:57:23: ( ',' )?
            {
                int alt16=2;
                switch ( this->LA(1) )
                {
                    case 38:
                    	{
                    		alt16=1;
                    	}
                        break;
                }

                switch (alt16)
                {
            	case 1:
            	    // JavaDecl.g:57:23: ','
            	    {
            	         this->matchToken(38, &FOLLOW_38_in_enumBody285);
            	        if  (this->hasException())
            	        {
            	            goto ruleenumBodyEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            // JavaDecl.g:57:28: ( enumBodyDeclarations )?
            {
                int alt17=2;
                switch ( this->LA(1) )
                {
                    case 47:
                    	{
                    		alt17=1;
                    	}
                        break;
                }

                switch (alt17)
                {
            	case 1:
            	    // JavaDecl.g:57:28: enumBodyDeclarations
            	    {
            	        this->followPush(FOLLOW_enumBodyDeclarations_in_enumBody288);
            	        enumBodyDeclarations();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleenumBodyEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

             this->matchToken(112, &FOLLOW_112_in_enumBody291);
            if  (this->hasException())
            {
                goto ruleenumBodyEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleenumBodyEx; /* Prevent compiler warnings */
    ruleenumBodyEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(11, enumBody_StartIndex); }

    return ;
}
/* $ANTLR end enumBody */

/**
 * $ANTLR start enumConstants
 * JavaDecl.g:60:1: enumConstants : enumConstant ( ',' enumConstant )* ;
 */
void
Java_JavaDecl::enumConstants()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER enumConstants_StartIndex;

    /* Initialize rule variables
     */
    enumConstants_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(12)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:61:2: ( enumConstant ( ',' enumConstant )* )
        // JavaDecl.g:61:4: enumConstant ( ',' enumConstant )*
        {
            this->followPush(FOLLOW_enumConstant_in_enumConstants302);
            enumConstant();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleenumConstantsEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:61:17: ( ',' enumConstant )*

            for (;;)
            {
                int alt18=2;
                switch ( this->LA(1) )
                {
                case 38:
                	{
                		switch ( this->LA(2) )
                		{
                		case Identifier:
                		case 53:
                			{
                				alt18=1;
                			}
                		    break;

                		}

                	}
                    break;

                }

                switch (alt18)
                {
            	case 1:
            	    // JavaDecl.g:61:18: ',' enumConstant
            	    {
            	         this->matchToken(38, &FOLLOW_38_in_enumConstants305);
            	        if  (this->hasException())
            	        {
            	            goto ruleenumConstantsEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_enumConstant_in_enumConstants307);
            	        enumConstant();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleenumConstantsEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop18;	/* break out of the loop */
            	    break;
                }
            }
            loop18: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleenumConstantsEx; /* Prevent compiler warnings */
    ruleenumConstantsEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(12, enumConstants_StartIndex); }

    return ;
}
/* $ANTLR end enumConstants */

/**
 * $ANTLR start enumConstant
 * JavaDecl.g:64:1: enumConstant : ( annotations )? Identifier ( arguments )? ( classBody )? ;
 */
void
Java_JavaDecl::enumConstant()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER enumConstant_StartIndex;

    /* Initialize rule variables
     */
    enumConstant_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(13)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:65:2: ( ( annotations )? Identifier ( arguments )? ( classBody )? )
        // JavaDecl.g:65:4: ( annotations )? Identifier ( arguments )? ( classBody )?
        {
            // JavaDecl.g:65:4: ( annotations )?
            {
                int alt19=2;
                switch ( this->LA(1) )
                {
                    case 53:
                    	{
                    		alt19=1;
                    	}
                        break;
                }

                switch (alt19)
                {
            	case 1:
            	    // JavaDecl.g:65:4: annotations
            	    {
            	        this->followPush(FOLLOW_annotations_in_enumConstant321);
            	        m_gJava->annotations();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleenumConstantEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

             this->matchToken(Identifier, &FOLLOW_Identifier_in_enumConstant324);
            if  (this->hasException())
            {
                goto ruleenumConstantEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:65:28: ( arguments )?
            {
                int alt20=2;
                switch ( this->LA(1) )
                {
                    case 31:
                    	{
                    		alt20=1;
                    	}
                        break;
                }

                switch (alt20)
                {
            	case 1:
            	    // JavaDecl.g:65:29: arguments
            	    {
            	        this->followPush(FOLLOW_arguments_in_enumConstant327);
            	        m_gJava->arguments();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleenumConstantEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            // JavaDecl.g:65:41: ( classBody )?
            {
                int alt21=2;
                switch ( this->LA(1) )
                {
                    case 108:
                    	{
                    		alt21=1;
                    	}
                        break;
                }

                switch (alt21)
                {
            	case 1:
            	    // JavaDecl.g:65:42: classBody
            	    {
            	        this->followPush(FOLLOW_classBody_in_enumConstant332);
            	        classBody();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleenumConstantEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

        }

    }
    // This is where rules clean up and exit
    //
    goto ruleenumConstantEx; /* Prevent compiler warnings */
    ruleenumConstantEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(13, enumConstant_StartIndex); }

    return ;
}
/* $ANTLR end enumConstant */

/**
 * $ANTLR start enumBodyDeclarations
 * JavaDecl.g:68:1: enumBodyDeclarations : ';' ( classBodyDeclaration )* ;
 */
void
Java_JavaDecl::enumBodyDeclarations()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER enumBodyDeclarations_StartIndex;

    /* Initialize rule variables
     */
    enumBodyDeclarations_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(14)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:69:2: ( ';' ( classBodyDeclaration )* )
        // JavaDecl.g:69:4: ';' ( classBodyDeclaration )*
        {
             this->matchToken(47, &FOLLOW_47_in_enumBodyDeclarations346);
            if  (this->hasException())
            {
                goto ruleenumBodyDeclarationsEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:69:8: ( classBodyDeclaration )*

            for (;;)
            {
                int alt22=2;
                switch ( this->LA(1) )
                {
                case ENUM:
                case Identifier:
                case 47:
                case 48:
                case 53:
                case 58:
                case 60:
                case 62:
                case 65:
                case 66:
                case 70:
                case 74:
                case 76:
                case 82:
                case 83:
                case 84:
                case 85:
                case 89:
                case 90:
                case 91:
                case 93:
                case 94:
                case 95:
                case 98:
                case 102:
                case 105:
                case 106:
                case 108:
                	{
                		alt22=1;
                	}
                    break;

                }

                switch (alt22)
                {
            	case 1:
            	    // JavaDecl.g:69:9: classBodyDeclaration
            	    {
            	        this->followPush(FOLLOW_classBodyDeclaration_in_enumBodyDeclarations349);
            	        classBodyDeclaration();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleenumBodyDeclarationsEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop22;	/* break out of the loop */
            	    break;
                }
            }
            loop22: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleenumBodyDeclarationsEx; /* Prevent compiler warnings */
    ruleenumBodyDeclarationsEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(14, enumBodyDeclarations_StartIndex); }

    return ;
}
/* $ANTLR end enumBodyDeclarations */

/**
 * $ANTLR start interfaceDeclaration
 * JavaDecl.g:72:1: interfaceDeclaration : ( normalInterfaceDeclaration | annotationTypeDeclaration );
 */
void
Java_JavaDecl::interfaceDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER interfaceDeclaration_StartIndex;

    /* Initialize rule variables
     */
    interfaceDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(15)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:73:2: ( normalInterfaceDeclaration | annotationTypeDeclaration )

            ANTLR_UINT32 alt23;

            alt23=2;

            switch ( this->LA(1) )
            {
            case 83:
            	{
            		alt23=1;
            	}
                break;
            case 53:
            	{
            		alt23=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 23 );
                ex->set_state( 0 );


                goto ruleinterfaceDeclarationEx;

            }

            switch (alt23)
            {
        	case 1:
        	    // JavaDecl.g:73:4: normalInterfaceDeclaration
        	    {
        	        this->followPush(FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration363);
        	        normalInterfaceDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:74:5: annotationTypeDeclaration
        	    {
        	        this->followPush(FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration369);
        	        m_gJava->annotationTypeDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruleinterfaceDeclarationEx; /* Prevent compiler warnings */
    ruleinterfaceDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(15, interfaceDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end interfaceDeclaration */

/**
 * $ANTLR start normalInterfaceDeclaration
 * JavaDecl.g:77:1: normalInterfaceDeclaration : 'interface' Identifier ( typeParameters )? ( 'extends' typeList )? interfaceBody ;
 */
void
Java_JavaDecl::normalInterfaceDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER normalInterfaceDeclaration_StartIndex;

    /* Initialize rule variables
     */
    normalInterfaceDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(16)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:78:2: ( 'interface' Identifier ( typeParameters )? ( 'extends' typeList )? interfaceBody )
        // JavaDecl.g:78:4: 'interface' Identifier ( typeParameters )? ( 'extends' typeList )? interfaceBody
        {
             this->matchToken(83, &FOLLOW_83_in_normalInterfaceDeclaration381);
            if  (this->hasException())
            {
                goto rulenormalInterfaceDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


             this->matchToken(Identifier, &FOLLOW_Identifier_in_normalInterfaceDeclaration383);
            if  (this->hasException())
            {
                goto rulenormalInterfaceDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:78:27: ( typeParameters )?
            {
                int alt24=2;
                switch ( this->LA(1) )
                {
                    case 48:
                    	{
                    		alt24=1;
                    	}
                        break;
                }

                switch (alt24)
                {
            	case 1:
            	    // JavaDecl.g:78:27: typeParameters
            	    {
            	        this->followPush(FOLLOW_typeParameters_in_normalInterfaceDeclaration385);
            	        typeParameters();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulenormalInterfaceDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            // JavaDecl.g:78:43: ( 'extends' typeList )?
            {
                int alt25=2;
                switch ( this->LA(1) )
                {
                    case 72:
                    	{
                    		alt25=1;
                    	}
                        break;
                }

                switch (alt25)
                {
            	case 1:
            	    // JavaDecl.g:78:44: 'extends' typeList
            	    {
            	         this->matchToken(72, &FOLLOW_72_in_normalInterfaceDeclaration389);
            	        if  (this->hasException())
            	        {
            	            goto rulenormalInterfaceDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_typeList_in_normalInterfaceDeclaration391);
            	        typeList();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulenormalInterfaceDeclarationEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            this->followPush(FOLLOW_interfaceBody_in_normalInterfaceDeclaration395);
            interfaceBody();

            this->followPop();
            if  (this->hasException())
            {
                goto rulenormalInterfaceDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto rulenormalInterfaceDeclarationEx; /* Prevent compiler warnings */
    rulenormalInterfaceDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(16, normalInterfaceDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end normalInterfaceDeclaration */

/**
 * $ANTLR start typeList
 * JavaDecl.g:81:1: typeList : type ( ',' type )* ;
 */
void
Java_JavaDecl::typeList()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER typeList_StartIndex;

    /* Initialize rule variables
     */
    typeList_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(17)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:82:2: ( type ( ',' type )* )
        // JavaDecl.g:82:4: type ( ',' type )*
        {
            this->followPush(FOLLOW_type_in_typeList407);
            type();

            this->followPop();
            if  (this->hasException())
            {
                goto ruletypeListEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:82:9: ( ',' type )*

            for (;;)
            {
                int alt26=2;
                switch ( this->LA(1) )
                {
                case 38:
                	{
                		alt26=1;
                	}
                    break;

                }

                switch (alt26)
                {
            	case 1:
            	    // JavaDecl.g:82:10: ',' type
            	    {
            	         this->matchToken(38, &FOLLOW_38_in_typeList410);
            	        if  (this->hasException())
            	        {
            	            goto ruletypeListEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_type_in_typeList412);
            	        type();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruletypeListEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop26;	/* break out of the loop */
            	    break;
                }
            }
            loop26: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto ruletypeListEx; /* Prevent compiler warnings */
    ruletypeListEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(17, typeList_StartIndex); }

    return ;
}
/* $ANTLR end typeList */

/**
 * $ANTLR start classBody
 * JavaDecl.g:85:1: classBody : '{' ( classBodyDeclaration )* '}' ;
 */
void
Java_JavaDecl::classBody()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER classBody_StartIndex;

    /* Initialize rule variables
     */
    classBody_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(18)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:86:2: ( '{' ( classBodyDeclaration )* '}' )
        // JavaDecl.g:86:4: '{' ( classBodyDeclaration )* '}'
        {
             this->matchToken(108, &FOLLOW_108_in_classBody426);
            if  (this->hasException())
            {
                goto ruleclassBodyEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:86:8: ( classBodyDeclaration )*

            for (;;)
            {
                int alt27=2;
                switch ( this->LA(1) )
                {
                case ENUM:
                case Identifier:
                case 47:
                case 48:
                case 53:
                case 58:
                case 60:
                case 62:
                case 65:
                case 66:
                case 70:
                case 74:
                case 76:
                case 82:
                case 83:
                case 84:
                case 85:
                case 89:
                case 90:
                case 91:
                case 93:
                case 94:
                case 95:
                case 98:
                case 102:
                case 105:
                case 106:
                case 108:
                	{
                		alt27=1;
                	}
                    break;

                }

                switch (alt27)
                {
            	case 1:
            	    // JavaDecl.g:86:8: classBodyDeclaration
            	    {
            	        this->followPush(FOLLOW_classBodyDeclaration_in_classBody428);
            	        classBodyDeclaration();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleclassBodyEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop27;	/* break out of the loop */
            	    break;
                }
            }
            loop27: ; /* Jump out to here if this rule does not match */


             this->matchToken(112, &FOLLOW_112_in_classBody431);
            if  (this->hasException())
            {
                goto ruleclassBodyEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleclassBodyEx; /* Prevent compiler warnings */
    ruleclassBodyEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(18, classBody_StartIndex); }

    return ;
}
/* $ANTLR end classBody */

/**
 * $ANTLR start interfaceBody
 * JavaDecl.g:89:1: interfaceBody : '{' ( interfaceBodyDeclaration )* '}' ;
 */
void
Java_JavaDecl::interfaceBody()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER interfaceBody_StartIndex;

    /* Initialize rule variables
     */
    interfaceBody_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(19)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:90:2: ( '{' ( interfaceBodyDeclaration )* '}' )
        // JavaDecl.g:90:4: '{' ( interfaceBodyDeclaration )* '}'
        {
             this->matchToken(108, &FOLLOW_108_in_interfaceBody443);
            if  (this->hasException())
            {
                goto ruleinterfaceBodyEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:90:8: ( interfaceBodyDeclaration )*

            for (;;)
            {
                int alt28=2;
                switch ( this->LA(1) )
                {
                case ENUM:
                case Identifier:
                case 47:
                case 48:
                case 53:
                case 58:
                case 60:
                case 62:
                case 65:
                case 66:
                case 70:
                case 74:
                case 76:
                case 82:
                case 83:
                case 84:
                case 85:
                case 89:
                case 90:
                case 91:
                case 93:
                case 94:
                case 95:
                case 98:
                case 102:
                case 105:
                case 106:
                	{
                		alt28=1;
                	}
                    break;

                }

                switch (alt28)
                {
            	case 1:
            	    // JavaDecl.g:90:8: interfaceBodyDeclaration
            	    {
            	        this->followPush(FOLLOW_interfaceBodyDeclaration_in_interfaceBody445);
            	        interfaceBodyDeclaration();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleinterfaceBodyEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop28;	/* break out of the loop */
            	    break;
                }
            }
            loop28: ; /* Jump out to here if this rule does not match */


             this->matchToken(112, &FOLLOW_112_in_interfaceBody448);
            if  (this->hasException())
            {
                goto ruleinterfaceBodyEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleinterfaceBodyEx; /* Prevent compiler warnings */
    ruleinterfaceBodyEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(19, interfaceBody_StartIndex); }

    return ;
}
/* $ANTLR end interfaceBody */

/**
 * $ANTLR start classBodyDeclaration
 * JavaDecl.g:93:1: classBodyDeclaration : ( ';' | ( 'static' )? block | ( modifier )* memberDecl );
 */
void
Java_JavaDecl::classBodyDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER classBodyDeclaration_StartIndex;

    /* Initialize rule variables
     */
    classBodyDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(20)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:94:2: ( ';' | ( 'static' )? block | ( modifier )* memberDecl )

            ANTLR_UINT32 alt31;

            alt31=3;

            switch ( this->LA(1) )
            {
            case 47:
            	{
            		alt31=1;
            	}
                break;
            case 94:
            	{
            		switch ( this->LA(2) )
            		{
            		case 108:
            			{
            				alt31=2;
            			}
            		    break;
            		case ENUM:
            		case Identifier:
            		case 48:
            		case 53:
            		case 58:
            		case 60:
            		case 62:
            		case 65:
            		case 66:
            		case 70:
            		case 74:
            		case 76:
            		case 82:
            		case 83:
            		case 84:
            		case 85:
            		case 89:
            		case 90:
            		case 91:
            		case 93:
            		case 94:
            		case 95:
            		case 98:
            		case 102:
            		case 105:
            		case 106:
            			{
            				alt31=3;
            			}
            		    break;

            		default:
            		    if (this->get_backtracking()>0)
            		    {
            		        this->set_failedflag( true );
            		        return ;
            		    }

            		    ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            		    ex->set_decisionNum( 31 );
            		    ex->set_state( 2 );


            		    goto ruleclassBodyDeclarationEx;

            		}

            	}
                break;
            case 108:
            	{
            		alt31=2;
            	}
                break;
            case ENUM:
            case Identifier:
            case 48:
            case 53:
            case 58:
            case 60:
            case 62:
            case 65:
            case 66:
            case 70:
            case 74:
            case 76:
            case 82:
            case 83:
            case 84:
            case 85:
            case 89:
            case 90:
            case 91:
            case 93:
            case 95:
            case 98:
            case 102:
            case 105:
            case 106:
            	{
            		alt31=3;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 31 );
                ex->set_state( 0 );


                goto ruleclassBodyDeclarationEx;

            }

            switch (alt31)
            {
        	case 1:
        	    // JavaDecl.g:94:4: ';'
        	    {
        	         this->matchToken(47, &FOLLOW_47_in_classBodyDeclaration459);
        	        if  (this->hasException())
        	        {
        	            goto ruleclassBodyDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:95:4: ( 'static' )? block
        	    {
        	        // JavaDecl.g:95:4: ( 'static' )?
        	        {
        	            int alt29=2;
        	            switch ( this->LA(1) )
        	            {
        	                case 94:
        	                	{
        	                		alt29=1;
        	                	}
        	                    break;
        	            }

        	            switch (alt29)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:95:4: 'static'
        	        	    {
        	        	         this->matchToken(94, &FOLLOW_94_in_classBodyDeclaration464);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruleclassBodyDeclarationEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	            }
        	        }

        	        this->followPush(FOLLOW_block_in_classBodyDeclaration467);
        	        m_gJava->block();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleclassBodyDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 3:
        	    // JavaDecl.g:96:4: ( modifier )* memberDecl
        	    {
        	        // JavaDecl.g:96:4: ( modifier )*

        	        for (;;)
        	        {
        	            int alt30=2;
        	            switch ( this->LA(1) )
        	            {
        	            case 53:
        	            	{
        	            		switch ( this->LA(2) )
        	            		{
        	            		case Identifier:
        	            			{
        	            				alt30=1;
        	            			}
        	            		    break;

        	            		}

        	            	}
        	                break;
        	            case 58:
        	            case 74:
        	            case 85:
        	            case 89:
        	            case 90:
        	            case 91:
        	            case 94:
        	            case 95:
        	            case 98:
        	            case 102:
        	            case 106:
        	            	{
        	            		alt30=1;
        	            	}
        	                break;

        	            }

        	            switch (alt30)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:96:4: modifier
        	        	    {
        	        	        this->followPush(FOLLOW_modifier_in_classBodyDeclaration472);
        	        	        modifier();

        	        	        this->followPop();
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruleclassBodyDeclarationEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	        	default:
        	        	    goto loop30;	/* break out of the loop */
        	        	    break;
        	            }
        	        }
        	        loop30: ; /* Jump out to here if this rule does not match */


        	        this->followPush(FOLLOW_memberDecl_in_classBodyDeclaration475);
        	        memberDecl();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleclassBodyDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruleclassBodyDeclarationEx; /* Prevent compiler warnings */
    ruleclassBodyDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(20, classBodyDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end classBodyDeclaration */

/**
 * $ANTLR start memberDecl
 * JavaDecl.g:99:1: memberDecl : ( genericMethodOrConstructorDecl | methodDeclaration | fieldDeclaration | 'void' Identifier voidMethodDeclaratorRest | Identifier constructorDeclaratorRest | interfaceDeclaration | classDeclaration );
 */
void
Java_JavaDecl::memberDecl()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER memberDecl_StartIndex;

    /* Initialize rule variables
     */
    memberDecl_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(21)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:100:2: ( genericMethodOrConstructorDecl | methodDeclaration | fieldDeclaration | 'void' Identifier voidMethodDeclaratorRest | Identifier constructorDeclaratorRest | interfaceDeclaration | classDeclaration )

            ANTLR_UINT32 alt32;

            alt32=7;

            switch ( this->LA(1) )
            {
            case 48:
            	{
            		alt32=1;
            	}
                break;
            case Identifier:
            	{
            		switch ( this->LA(2) )
            		{
            		case 48:
            			{
            				{
            				    int LA32_9 = this->LA(3);
            				    if ( (this->msynpred( antlr3::ClassForwarder<synpred34_JavaDecl>() )))
            				    {
            				        alt32=2;
            				    }
            				    else if ( (this->msynpred( antlr3::ClassForwarder<synpred35_JavaDecl>() )))
            				    {
            				        alt32=3;
            				    }
            				    else
            				    {
            				        if (this->get_backtracking()>0)
            				        {
            				            this->set_failedflag( true );
            				            return ;
            				        }


            				        ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            				        ex->set_decisionNum( 32 );
            				        ex->set_state( 9 );


            				        goto rulememberDeclEx;

            				    }
            				}
            			}
            		    break;
            		case 42:
            			{
            				{
            				    int LA32_10 = this->LA(3);
            				    if ( (this->msynpred( antlr3::ClassForwarder<synpred34_JavaDecl>() )))
            				    {
            				        alt32=2;
            				    }
            				    else if ( (this->msynpred( antlr3::ClassForwarder<synpred35_JavaDecl>() )))
            				    {
            				        alt32=3;
            				    }
            				    else
            				    {
            				        if (this->get_backtracking()>0)
            				        {
            				            this->set_failedflag( true );
            				            return ;
            				        }


            				        ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            				        ex->set_decisionNum( 32 );
            				        ex->set_state( 10 );


            				        goto rulememberDeclEx;

            				    }
            				}
            			}
            		    break;
            		case 54:
            			{
            				{
            				    int LA32_11 = this->LA(3);
            				    if ( (this->msynpred( antlr3::ClassForwarder<synpred34_JavaDecl>() )))
            				    {
            				        alt32=2;
            				    }
            				    else if ( (this->msynpred( antlr3::ClassForwarder<synpred35_JavaDecl>() )))
            				    {
            				        alt32=3;
            				    }
            				    else
            				    {
            				        if (this->get_backtracking()>0)
            				        {
            				            this->set_failedflag( true );
            				            return ;
            				        }


            				        ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            				        ex->set_decisionNum( 32 );
            				        ex->set_state( 11 );


            				        goto rulememberDeclEx;

            				    }
            				}
            			}
            		    break;
            		case Identifier:
            			{
            				{
            				    int LA32_12 = this->LA(3);
            				    if ( (this->msynpred( antlr3::ClassForwarder<synpred34_JavaDecl>() )))
            				    {
            				        alt32=2;
            				    }
            				    else if ( (this->msynpred( antlr3::ClassForwarder<synpred35_JavaDecl>() )))
            				    {
            				        alt32=3;
            				    }
            				    else
            				    {
            				        if (this->get_backtracking()>0)
            				        {
            				            this->set_failedflag( true );
            				            return ;
            				        }


            				        ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            				        ex->set_decisionNum( 32 );
            				        ex->set_state( 12 );


            				        goto rulememberDeclEx;

            				    }
            				}
            			}
            		    break;
            		case 31:
            			{
            				alt32=5;
            			}
            		    break;

            		default:
            		    if (this->get_backtracking()>0)
            		    {
            		        this->set_failedflag( true );
            		        return ;
            		    }

            		    ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            		    ex->set_decisionNum( 32 );
            		    ex->set_state( 2 );


            		    goto rulememberDeclEx;

            		}

            	}
                break;
            case 60:
            case 62:
            case 65:
            case 70:
            case 76:
            case 82:
            case 84:
            case 93:
            	{
            		switch ( this->LA(2) )
            		{
            		case 54:
            			{
            				{
            				    int LA32_14 = this->LA(3);
            				    if ( (this->msynpred( antlr3::ClassForwarder<synpred34_JavaDecl>() )))
            				    {
            				        alt32=2;
            				    }
            				    else if ( (this->msynpred( antlr3::ClassForwarder<synpred35_JavaDecl>() )))
            				    {
            				        alt32=3;
            				    }
            				    else
            				    {
            				        if (this->get_backtracking()>0)
            				        {
            				            this->set_failedflag( true );
            				            return ;
            				        }


            				        ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            				        ex->set_decisionNum( 32 );
            				        ex->set_state( 14 );


            				        goto rulememberDeclEx;

            				    }
            				}
            			}
            		    break;
            		case Identifier:
            			{
            				{
            				    int LA32_15 = this->LA(3);
            				    if ( (this->msynpred( antlr3::ClassForwarder<synpred34_JavaDecl>() )))
            				    {
            				        alt32=2;
            				    }
            				    else if ( (this->msynpred( antlr3::ClassForwarder<synpred35_JavaDecl>() )))
            				    {
            				        alt32=3;
            				    }
            				    else
            				    {
            				        if (this->get_backtracking()>0)
            				        {
            				            this->set_failedflag( true );
            				            return ;
            				        }


            				        ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            				        ex->set_decisionNum( 32 );
            				        ex->set_state( 15 );


            				        goto rulememberDeclEx;

            				    }
            				}
            			}
            		    break;

            		default:
            		    if (this->get_backtracking()>0)
            		    {
            		        this->set_failedflag( true );
            		        return ;
            		    }

            		    ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            		    ex->set_decisionNum( 32 );
            		    ex->set_state( 3 );


            		    goto rulememberDeclEx;

            		}

            	}
                break;
            case 105:
            	{
            		alt32=4;
            	}
                break;
            case 53:
            case 83:
            	{
            		alt32=6;
            	}
                break;
            case ENUM:
            case 66:
            	{
            		alt32=7;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 32 );
                ex->set_state( 0 );


                goto rulememberDeclEx;

            }

            switch (alt32)
            {
        	case 1:
        	    // JavaDecl.g:100:4: genericMethodOrConstructorDecl
        	    {
        	        this->followPush(FOLLOW_genericMethodOrConstructorDecl_in_memberDecl487);
        	        genericMethodOrConstructorDecl();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:101:4: methodDeclaration
        	    {
        	        this->followPush(FOLLOW_methodDeclaration_in_memberDecl492);
        	        methodDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 3:
        	    // JavaDecl.g:102:4: fieldDeclaration
        	    {
        	        this->followPush(FOLLOW_fieldDeclaration_in_memberDecl497);
        	        fieldDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 4:
        	    // JavaDecl.g:103:4: 'void' Identifier voidMethodDeclaratorRest
        	    {
        	         this->matchToken(105, &FOLLOW_105_in_memberDecl502);
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	         this->matchToken(Identifier, &FOLLOW_Identifier_in_memberDecl504);
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        this->followPush(FOLLOW_voidMethodDeclaratorRest_in_memberDecl506);
        	        voidMethodDeclaratorRest();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 5:
        	    // JavaDecl.g:104:4: Identifier constructorDeclaratorRest
        	    {
        	         this->matchToken(Identifier, &FOLLOW_Identifier_in_memberDecl511);
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        this->followPush(FOLLOW_constructorDeclaratorRest_in_memberDecl513);
        	        constructorDeclaratorRest();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 6:
        	    // JavaDecl.g:105:4: interfaceDeclaration
        	    {
        	        this->followPush(FOLLOW_interfaceDeclaration_in_memberDecl518);
        	        interfaceDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 7:
        	    // JavaDecl.g:106:4: classDeclaration
        	    {
        	        this->followPush(FOLLOW_classDeclaration_in_memberDecl523);
        	        classDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulememberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto rulememberDeclEx; /* Prevent compiler warnings */
    rulememberDeclEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(21, memberDecl_StartIndex); }

    return ;
}
/* $ANTLR end memberDecl */

/**
 * $ANTLR start genericMethodOrConstructorDecl
 * JavaDecl.g:109:1: genericMethodOrConstructorDecl : typeParameters genericMethodOrConstructorRest ;
 */
void
Java_JavaDecl::genericMethodOrConstructorDecl()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER genericMethodOrConstructorDecl_StartIndex;

    /* Initialize rule variables
     */
    genericMethodOrConstructorDecl_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(22)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:110:2: ( typeParameters genericMethodOrConstructorRest )
        // JavaDecl.g:110:4: typeParameters genericMethodOrConstructorRest
        {
            this->followPush(FOLLOW_typeParameters_in_genericMethodOrConstructorDecl535);
            typeParameters();

            this->followPop();
            if  (this->hasException())
            {
                goto rulegenericMethodOrConstructorDeclEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl537);
            genericMethodOrConstructorRest();

            this->followPop();
            if  (this->hasException())
            {
                goto rulegenericMethodOrConstructorDeclEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto rulegenericMethodOrConstructorDeclEx; /* Prevent compiler warnings */
    rulegenericMethodOrConstructorDeclEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(22, genericMethodOrConstructorDecl_StartIndex); }

    return ;
}
/* $ANTLR end genericMethodOrConstructorDecl */

/**
 * $ANTLR start genericMethodOrConstructorRest
 * JavaDecl.g:113:1: genericMethodOrConstructorRest : ( ( type | 'void' ) Identifier methodDeclaratorRest | Identifier constructorDeclaratorRest );
 */
void
Java_JavaDecl::genericMethodOrConstructorRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER genericMethodOrConstructorRest_StartIndex;

    /* Initialize rule variables
     */
    genericMethodOrConstructorRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(23)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:114:2: ( ( type | 'void' ) Identifier methodDeclaratorRest | Identifier constructorDeclaratorRest )

            ANTLR_UINT32 alt34;

            alt34=2;

            switch ( this->LA(1) )
            {
            case Identifier:
            	{
            		switch ( this->LA(2) )
            		{
            		case Identifier:
            		case 42:
            		case 48:
            		case 54:
            			{
            				alt34=1;
            			}
            		    break;
            		case 31:
            			{
            				alt34=2;
            			}
            		    break;

            		default:
            		    if (this->get_backtracking()>0)
            		    {
            		        this->set_failedflag( true );
            		        return ;
            		    }

            		    ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            		    ex->set_decisionNum( 34 );
            		    ex->set_state( 1 );


            		    goto rulegenericMethodOrConstructorRestEx;

            		}

            	}
                break;
            case 60:
            case 62:
            case 65:
            case 70:
            case 76:
            case 82:
            case 84:
            case 93:
            case 105:
            	{
            		alt34=1;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 34 );
                ex->set_state( 0 );


                goto rulegenericMethodOrConstructorRestEx;

            }

            switch (alt34)
            {
        	case 1:
        	    // JavaDecl.g:114:4: ( type | 'void' ) Identifier methodDeclaratorRest
        	    {
        	        // JavaDecl.g:114:4: ( type | 'void' )
        	        {
        	            int alt33=2;
        	            switch ( this->LA(1) )
        	            {
        	            case Identifier:
        	            case 60:
        	            case 62:
        	            case 65:
        	            case 70:
        	            case 76:
        	            case 82:
        	            case 84:
        	            case 93:
        	            	{
        	            		alt33=1;
        	            	}
        	                break;
        	            case 105:
        	            	{
        	            		alt33=2;
        	            	}
        	                break;

        	            default:
        	                if (this->get_backtracking()>0)
        	                {
        	                    this->set_failedflag( true );
        	                    return ;
        	                }

        	                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
        	                ex->set_decisionNum( 33 );
        	                ex->set_state( 0 );


        	                goto rulegenericMethodOrConstructorRestEx;

        	            }

        	            switch (alt33)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:114:5: type
        	        	    {
        	        	        this->followPush(FOLLOW_type_in_genericMethodOrConstructorRest550);
        	        	        type();

        	        	        this->followPop();
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto rulegenericMethodOrConstructorRestEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;
        	        	case 2:
        	        	    // JavaDecl.g:114:12: 'void'
        	        	    {
        	        	         this->matchToken(105, &FOLLOW_105_in_genericMethodOrConstructorRest554);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto rulegenericMethodOrConstructorRestEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	            }
        	        }

        	         this->matchToken(Identifier, &FOLLOW_Identifier_in_genericMethodOrConstructorRest557);
        	        if  (this->hasException())
        	        {
        	            goto rulegenericMethodOrConstructorRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        this->followPush(FOLLOW_methodDeclaratorRest_in_genericMethodOrConstructorRest559);
        	        methodDeclaratorRest();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulegenericMethodOrConstructorRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:115:4: Identifier constructorDeclaratorRest
        	    {
        	         this->matchToken(Identifier, &FOLLOW_Identifier_in_genericMethodOrConstructorRest564);
        	        if  (this->hasException())
        	        {
        	            goto rulegenericMethodOrConstructorRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        this->followPush(FOLLOW_constructorDeclaratorRest_in_genericMethodOrConstructorRest566);
        	        constructorDeclaratorRest();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulegenericMethodOrConstructorRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto rulegenericMethodOrConstructorRestEx; /* Prevent compiler warnings */
    rulegenericMethodOrConstructorRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(23, genericMethodOrConstructorRest_StartIndex); }

    return ;
}
/* $ANTLR end genericMethodOrConstructorRest */

/**
 * $ANTLR start methodDeclaration
 * JavaDecl.g:118:1: methodDeclaration : type Identifier methodDeclaratorRest ;
 */
void
Java_JavaDecl::methodDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER methodDeclaration_StartIndex;

    /* Initialize rule variables
     */
    methodDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(24)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:119:2: ( type Identifier methodDeclaratorRest )
        // JavaDecl.g:119:4: type Identifier methodDeclaratorRest
        {
            this->followPush(FOLLOW_type_in_methodDeclaration577);
            type();

            this->followPop();
            if  (this->hasException())
            {
                goto rulemethodDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


             this->matchToken(Identifier, &FOLLOW_Identifier_in_methodDeclaration579);
            if  (this->hasException())
            {
                goto rulemethodDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_methodDeclaratorRest_in_methodDeclaration581);
            methodDeclaratorRest();

            this->followPop();
            if  (this->hasException())
            {
                goto rulemethodDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto rulemethodDeclarationEx; /* Prevent compiler warnings */
    rulemethodDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(24, methodDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end methodDeclaration */

/**
 * $ANTLR start fieldDeclaration
 * JavaDecl.g:122:1: fieldDeclaration : type variableDeclarators ';' ;
 */
void
Java_JavaDecl::fieldDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER fieldDeclaration_StartIndex;

    /* Initialize rule variables
     */
    fieldDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(25)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:123:2: ( type variableDeclarators ';' )
        // JavaDecl.g:123:4: type variableDeclarators ';'
        {
            this->followPush(FOLLOW_type_in_fieldDeclaration592);
            type();

            this->followPop();
            if  (this->hasException())
            {
                goto rulefieldDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_variableDeclarators_in_fieldDeclaration594);
            variableDeclarators();

            this->followPop();
            if  (this->hasException())
            {
                goto rulefieldDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


             this->matchToken(47, &FOLLOW_47_in_fieldDeclaration596);
            if  (this->hasException())
            {
                goto rulefieldDeclarationEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto rulefieldDeclarationEx; /* Prevent compiler warnings */
    rulefieldDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(25, fieldDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end fieldDeclaration */

/**
 * $ANTLR start interfaceBodyDeclaration
 * JavaDecl.g:126:1: interfaceBodyDeclaration : ( ( modifier )* interfaceMemberDecl | ';' );
 */
void
Java_JavaDecl::interfaceBodyDeclaration()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER interfaceBodyDeclaration_StartIndex;

    /* Initialize rule variables
     */
    interfaceBodyDeclaration_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(26)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:127:2: ( ( modifier )* interfaceMemberDecl | ';' )

            ANTLR_UINT32 alt36;

            alt36=2;

            switch ( this->LA(1) )
            {
            case ENUM:
            case Identifier:
            case 48:
            case 53:
            case 58:
            case 60:
            case 62:
            case 65:
            case 66:
            case 70:
            case 74:
            case 76:
            case 82:
            case 83:
            case 84:
            case 85:
            case 89:
            case 90:
            case 91:
            case 93:
            case 94:
            case 95:
            case 98:
            case 102:
            case 105:
            case 106:
            	{
            		alt36=1;
            	}
                break;
            case 47:
            	{
            		alt36=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 36 );
                ex->set_state( 0 );


                goto ruleinterfaceBodyDeclarationEx;

            }

            switch (alt36)
            {
        	case 1:
        	    // JavaDecl.g:127:4: ( modifier )* interfaceMemberDecl
        	    {
        	        // JavaDecl.g:127:4: ( modifier )*

        	        for (;;)
        	        {
        	            int alt35=2;
        	            switch ( this->LA(1) )
        	            {
        	            case 53:
        	            	{
        	            		switch ( this->LA(2) )
        	            		{
        	            		case Identifier:
        	            			{
        	            				alt35=1;
        	            			}
        	            		    break;

        	            		}

        	            	}
        	                break;
        	            case 58:
        	            case 74:
        	            case 85:
        	            case 89:
        	            case 90:
        	            case 91:
        	            case 94:
        	            case 95:
        	            case 98:
        	            case 102:
        	            case 106:
        	            	{
        	            		alt35=1;
        	            	}
        	                break;

        	            }

        	            switch (alt35)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:127:4: modifier
        	        	    {
        	        	        this->followPush(FOLLOW_modifier_in_interfaceBodyDeclaration609);
        	        	        modifier();

        	        	        this->followPop();
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruleinterfaceBodyDeclarationEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	        	default:
        	        	    goto loop35;	/* break out of the loop */
        	        	    break;
        	            }
        	        }
        	        loop35: ; /* Jump out to here if this rule does not match */


        	        this->followPush(FOLLOW_interfaceMemberDecl_in_interfaceBodyDeclaration612);
        	        interfaceMemberDecl();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceBodyDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:128:6: ';'
        	    {
        	         this->matchToken(47, &FOLLOW_47_in_interfaceBodyDeclaration619);
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceBodyDeclarationEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruleinterfaceBodyDeclarationEx; /* Prevent compiler warnings */
    ruleinterfaceBodyDeclarationEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(26, interfaceBodyDeclaration_StartIndex); }

    return ;
}
/* $ANTLR end interfaceBodyDeclaration */

/**
 * $ANTLR start interfaceMemberDecl
 * JavaDecl.g:131:1: interfaceMemberDecl : ( interfaceMethodOrFieldDecl | interfaceGenericMethodDecl | 'void' Identifier voidInterfaceMethodDeclaratorRest | interfaceDeclaration | classDeclaration );
 */
void
Java_JavaDecl::interfaceMemberDecl()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER interfaceMemberDecl_StartIndex;

    /* Initialize rule variables
     */
    interfaceMemberDecl_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(27)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:132:2: ( interfaceMethodOrFieldDecl | interfaceGenericMethodDecl | 'void' Identifier voidInterfaceMethodDeclaratorRest | interfaceDeclaration | classDeclaration )

            ANTLR_UINT32 alt37;

            alt37=5;

            switch ( this->LA(1) )
            {
            case Identifier:
            case 60:
            case 62:
            case 65:
            case 70:
            case 76:
            case 82:
            case 84:
            case 93:
            	{
            		alt37=1;
            	}
                break;
            case 48:
            	{
            		alt37=2;
            	}
                break;
            case 105:
            	{
            		alt37=3;
            	}
                break;
            case 53:
            case 83:
            	{
            		alt37=4;
            	}
                break;
            case ENUM:
            case 66:
            	{
            		alt37=5;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 37 );
                ex->set_state( 0 );


                goto ruleinterfaceMemberDeclEx;

            }

            switch (alt37)
            {
        	case 1:
        	    // JavaDecl.g:132:4: interfaceMethodOrFieldDecl
        	    {
        	        this->followPush(FOLLOW_interfaceMethodOrFieldDecl_in_interfaceMemberDecl630);
        	        interfaceMethodOrFieldDecl();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMemberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:133:6: interfaceGenericMethodDecl
        	    {
        	        this->followPush(FOLLOW_interfaceGenericMethodDecl_in_interfaceMemberDecl637);
        	        interfaceGenericMethodDecl();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMemberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 3:
        	    // JavaDecl.g:134:9: 'void' Identifier voidInterfaceMethodDeclaratorRest
        	    {
        	         this->matchToken(105, &FOLLOW_105_in_interfaceMemberDecl647);
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMemberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	         this->matchToken(Identifier, &FOLLOW_Identifier_in_interfaceMemberDecl649);
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMemberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        this->followPush(FOLLOW_voidInterfaceMethodDeclaratorRest_in_interfaceMemberDecl651);
        	        voidInterfaceMethodDeclaratorRest();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMemberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 4:
        	    // JavaDecl.g:135:9: interfaceDeclaration
        	    {
        	        this->followPush(FOLLOW_interfaceDeclaration_in_interfaceMemberDecl661);
        	        interfaceDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMemberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 5:
        	    // JavaDecl.g:136:9: classDeclaration
        	    {
        	        this->followPush(FOLLOW_classDeclaration_in_interfaceMemberDecl671);
        	        classDeclaration();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMemberDeclEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruleinterfaceMemberDeclEx; /* Prevent compiler warnings */
    ruleinterfaceMemberDeclEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(27, interfaceMemberDecl_StartIndex); }

    return ;
}
/* $ANTLR end interfaceMemberDecl */

/**
 * $ANTLR start interfaceMethodOrFieldDecl
 * JavaDecl.g:139:1: interfaceMethodOrFieldDecl : type Identifier interfaceMethodOrFieldRest ;
 */
void
Java_JavaDecl::interfaceMethodOrFieldDecl()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER interfaceMethodOrFieldDecl_StartIndex;

    /* Initialize rule variables
     */
    interfaceMethodOrFieldDecl_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(28)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:140:2: ( type Identifier interfaceMethodOrFieldRest )
        // JavaDecl.g:140:4: type Identifier interfaceMethodOrFieldRest
        {
            this->followPush(FOLLOW_type_in_interfaceMethodOrFieldDecl683);
            type();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleinterfaceMethodOrFieldDeclEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


             this->matchToken(Identifier, &FOLLOW_Identifier_in_interfaceMethodOrFieldDecl685);
            if  (this->hasException())
            {
                goto ruleinterfaceMethodOrFieldDeclEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_interfaceMethodOrFieldRest_in_interfaceMethodOrFieldDecl687);
            interfaceMethodOrFieldRest();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleinterfaceMethodOrFieldDeclEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleinterfaceMethodOrFieldDeclEx; /* Prevent compiler warnings */
    ruleinterfaceMethodOrFieldDeclEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(28, interfaceMethodOrFieldDecl_StartIndex); }

    return ;
}
/* $ANTLR end interfaceMethodOrFieldDecl */

/**
 * $ANTLR start interfaceMethodOrFieldRest
 * JavaDecl.g:143:1: interfaceMethodOrFieldRest : ( constantDeclaratorsRest ';' | interfaceMethodDeclaratorRest );
 */
void
Java_JavaDecl::interfaceMethodOrFieldRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER interfaceMethodOrFieldRest_StartIndex;

    /* Initialize rule variables
     */
    interfaceMethodOrFieldRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(29)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:144:2: ( constantDeclaratorsRest ';' | interfaceMethodDeclaratorRest )

            ANTLR_UINT32 alt38;

            alt38=2;

            switch ( this->LA(1) )
            {
            case 49:
            case 54:
            	{
            		alt38=1;
            	}
                break;
            case 31:
            	{
            		alt38=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 38 );
                ex->set_state( 0 );


                goto ruleinterfaceMethodOrFieldRestEx;

            }

            switch (alt38)
            {
        	case 1:
        	    // JavaDecl.g:144:4: constantDeclaratorsRest ';'
        	    {
        	        this->followPush(FOLLOW_constantDeclaratorsRest_in_interfaceMethodOrFieldRest699);
        	        constantDeclaratorsRest();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMethodOrFieldRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	         this->matchToken(47, &FOLLOW_47_in_interfaceMethodOrFieldRest701);
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMethodOrFieldRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:145:4: interfaceMethodDeclaratorRest
        	    {
        	        this->followPush(FOLLOW_interfaceMethodDeclaratorRest_in_interfaceMethodOrFieldRest706);
        	        interfaceMethodDeclaratorRest();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleinterfaceMethodOrFieldRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruleinterfaceMethodOrFieldRestEx; /* Prevent compiler warnings */
    ruleinterfaceMethodOrFieldRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(29, interfaceMethodOrFieldRest_StartIndex); }

    return ;
}
/* $ANTLR end interfaceMethodOrFieldRest */

/**
 * $ANTLR start methodDeclaratorRest
 * JavaDecl.g:148:1: methodDeclaratorRest : formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( methodBody | ';' ) ;
 */
void
Java_JavaDecl::methodDeclaratorRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER methodDeclaratorRest_StartIndex;

    /* Initialize rule variables
     */
    methodDeclaratorRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(30)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:149:2: ( formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( methodBody | ';' ) )
        // JavaDecl.g:149:4: formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( methodBody | ';' )
        {
            this->followPush(FOLLOW_formalParameters_in_methodDeclaratorRest718);
            formalParameters();

            this->followPop();
            if  (this->hasException())
            {
                goto rulemethodDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:149:21: ( '[' ']' )*

            for (;;)
            {
                int alt39=2;
                switch ( this->LA(1) )
                {
                case 54:
                	{
                		alt39=1;
                	}
                    break;

                }

                switch (alt39)
                {
            	case 1:
            	    // JavaDecl.g:149:22: '[' ']'
            	    {
            	         this->matchToken(54, &FOLLOW_54_in_methodDeclaratorRest721);
            	        if  (this->hasException())
            	        {
            	            goto rulemethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	         this->matchToken(55, &FOLLOW_55_in_methodDeclaratorRest723);
            	        if  (this->hasException())
            	        {
            	            goto rulemethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop39;	/* break out of the loop */
            	    break;
                }
            }
            loop39: ; /* Jump out to here if this rule does not match */


            // JavaDecl.g:150:9: ( 'throws' qualifiedNameList )?
            {
                int alt40=2;
                switch ( this->LA(1) )
                {
                    case 101:
                    	{
                    		alt40=1;
                    	}
                        break;
                }

                switch (alt40)
                {
            	case 1:
            	    // JavaDecl.g:150:10: 'throws' qualifiedNameList
            	    {
            	         this->matchToken(101, &FOLLOW_101_in_methodDeclaratorRest736);
            	        if  (this->hasException())
            	        {
            	            goto rulemethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_qualifiedNameList_in_methodDeclaratorRest738);
            	        qualifiedNameList();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulemethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            // JavaDecl.g:151:9: ( methodBody | ';' )
            {
                int alt41=2;
                switch ( this->LA(1) )
                {
                case 108:
                	{
                		alt41=1;
                	}
                    break;
                case 47:
                	{
                		alt41=2;
                	}
                    break;

                default:
                    if (this->get_backtracking()>0)
                    {
                        this->set_failedflag( true );
                        return ;
                    }

                    ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                    ex->set_decisionNum( 41 );
                    ex->set_state( 0 );


                    goto rulemethodDeclaratorRestEx;

                }

                switch (alt41)
                {
            	case 1:
            	    // JavaDecl.g:151:13: methodBody
            	    {
            	        this->followPush(FOLLOW_methodBody_in_methodDeclaratorRest754);
            	        m_gJava->methodBody();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulemethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;
            	case 2:
            	    // JavaDecl.g:152:13: ';'
            	    {
            	         this->matchToken(47, &FOLLOW_47_in_methodDeclaratorRest768);
            	        if  (this->hasException())
            	        {
            	            goto rulemethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

        }

    }
    // This is where rules clean up and exit
    //
    goto rulemethodDeclaratorRestEx; /* Prevent compiler warnings */
    rulemethodDeclaratorRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(30, methodDeclaratorRest_StartIndex); }

    return ;
}
/* $ANTLR end methodDeclaratorRest */

/**
 * $ANTLR start voidMethodDeclaratorRest
 * JavaDecl.g:156:1: voidMethodDeclaratorRest : formalParameters ( 'throws' qualifiedNameList )? ( methodBody | ';' ) ;
 */
void
Java_JavaDecl::voidMethodDeclaratorRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER voidMethodDeclaratorRest_StartIndex;

    /* Initialize rule variables
     */
    voidMethodDeclaratorRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(31)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:157:2: ( formalParameters ( 'throws' qualifiedNameList )? ( methodBody | ';' ) )
        // JavaDecl.g:157:4: formalParameters ( 'throws' qualifiedNameList )? ( methodBody | ';' )
        {
            this->followPush(FOLLOW_formalParameters_in_voidMethodDeclaratorRest790);
            formalParameters();

            this->followPop();
            if  (this->hasException())
            {
                goto rulevoidMethodDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:157:21: ( 'throws' qualifiedNameList )?
            {
                int alt42=2;
                switch ( this->LA(1) )
                {
                    case 101:
                    	{
                    		alt42=1;
                    	}
                        break;
                }

                switch (alt42)
                {
            	case 1:
            	    // JavaDecl.g:157:22: 'throws' qualifiedNameList
            	    {
            	         this->matchToken(101, &FOLLOW_101_in_voidMethodDeclaratorRest793);
            	        if  (this->hasException())
            	        {
            	            goto rulevoidMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_qualifiedNameList_in_voidMethodDeclaratorRest795);
            	        qualifiedNameList();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulevoidMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            // JavaDecl.g:158:9: ( methodBody | ';' )
            {
                int alt43=2;
                switch ( this->LA(1) )
                {
                case 108:
                	{
                		alt43=1;
                	}
                    break;
                case 47:
                	{
                		alt43=2;
                	}
                    break;

                default:
                    if (this->get_backtracking()>0)
                    {
                        this->set_failedflag( true );
                        return ;
                    }

                    ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                    ex->set_decisionNum( 43 );
                    ex->set_state( 0 );


                    goto rulevoidMethodDeclaratorRestEx;

                }

                switch (alt43)
                {
            	case 1:
            	    // JavaDecl.g:158:13: methodBody
            	    {
            	        this->followPush(FOLLOW_methodBody_in_voidMethodDeclaratorRest811);
            	        m_gJava->methodBody();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulevoidMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;
            	case 2:
            	    // JavaDecl.g:159:13: ';'
            	    {
            	         this->matchToken(47, &FOLLOW_47_in_voidMethodDeclaratorRest825);
            	        if  (this->hasException())
            	        {
            	            goto rulevoidMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

        }

    }
    // This is where rules clean up and exit
    //
    goto rulevoidMethodDeclaratorRestEx; /* Prevent compiler warnings */
    rulevoidMethodDeclaratorRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(31, voidMethodDeclaratorRest_StartIndex); }

    return ;
}
/* $ANTLR end voidMethodDeclaratorRest */

/**
 * $ANTLR start interfaceMethodDeclaratorRest
 * JavaDecl.g:163:1: interfaceMethodDeclaratorRest : formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' ;
 */
void
Java_JavaDecl::interfaceMethodDeclaratorRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER interfaceMethodDeclaratorRest_StartIndex;

    /* Initialize rule variables
     */
    interfaceMethodDeclaratorRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(32)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:164:2: ( formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' )
        // JavaDecl.g:164:4: formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';'
        {
            this->followPush(FOLLOW_formalParameters_in_interfaceMethodDeclaratorRest847);
            formalParameters();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleinterfaceMethodDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:164:21: ( '[' ']' )*

            for (;;)
            {
                int alt44=2;
                switch ( this->LA(1) )
                {
                case 54:
                	{
                		alt44=1;
                	}
                    break;

                }

                switch (alt44)
                {
            	case 1:
            	    // JavaDecl.g:164:22: '[' ']'
            	    {
            	         this->matchToken(54, &FOLLOW_54_in_interfaceMethodDeclaratorRest850);
            	        if  (this->hasException())
            	        {
            	            goto ruleinterfaceMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	         this->matchToken(55, &FOLLOW_55_in_interfaceMethodDeclaratorRest852);
            	        if  (this->hasException())
            	        {
            	            goto ruleinterfaceMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop44;	/* break out of the loop */
            	    break;
                }
            }
            loop44: ; /* Jump out to here if this rule does not match */


            // JavaDecl.g:164:32: ( 'throws' qualifiedNameList )?
            {
                int alt45=2;
                switch ( this->LA(1) )
                {
                    case 101:
                    	{
                    		alt45=1;
                    	}
                        break;
                }

                switch (alt45)
                {
            	case 1:
            	    // JavaDecl.g:164:33: 'throws' qualifiedNameList
            	    {
            	         this->matchToken(101, &FOLLOW_101_in_interfaceMethodDeclaratorRest857);
            	        if  (this->hasException())
            	        {
            	            goto ruleinterfaceMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_qualifiedNameList_in_interfaceMethodDeclaratorRest859);
            	        qualifiedNameList();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleinterfaceMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

             this->matchToken(47, &FOLLOW_47_in_interfaceMethodDeclaratorRest863);
            if  (this->hasException())
            {
                goto ruleinterfaceMethodDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleinterfaceMethodDeclaratorRestEx; /* Prevent compiler warnings */
    ruleinterfaceMethodDeclaratorRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(32, interfaceMethodDeclaratorRest_StartIndex); }

    return ;
}
/* $ANTLR end interfaceMethodDeclaratorRest */

/**
 * $ANTLR start interfaceGenericMethodDecl
 * JavaDecl.g:167:1: interfaceGenericMethodDecl : typeParameters ( type | 'void' ) Identifier interfaceMethodDeclaratorRest ;
 */
void
Java_JavaDecl::interfaceGenericMethodDecl()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER interfaceGenericMethodDecl_StartIndex;

    /* Initialize rule variables
     */
    interfaceGenericMethodDecl_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(33)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:168:2: ( typeParameters ( type | 'void' ) Identifier interfaceMethodDeclaratorRest )
        // JavaDecl.g:168:4: typeParameters ( type | 'void' ) Identifier interfaceMethodDeclaratorRest
        {
            this->followPush(FOLLOW_typeParameters_in_interfaceGenericMethodDecl875);
            typeParameters();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleinterfaceGenericMethodDeclEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:168:19: ( type | 'void' )
            {
                int alt46=2;
                switch ( this->LA(1) )
                {
                case Identifier:
                case 60:
                case 62:
                case 65:
                case 70:
                case 76:
                case 82:
                case 84:
                case 93:
                	{
                		alt46=1;
                	}
                    break;
                case 105:
                	{
                		alt46=2;
                	}
                    break;

                default:
                    if (this->get_backtracking()>0)
                    {
                        this->set_failedflag( true );
                        return ;
                    }

                    ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                    ex->set_decisionNum( 46 );
                    ex->set_state( 0 );


                    goto ruleinterfaceGenericMethodDeclEx;

                }

                switch (alt46)
                {
            	case 1:
            	    // JavaDecl.g:168:20: type
            	    {
            	        this->followPush(FOLLOW_type_in_interfaceGenericMethodDecl878);
            	        type();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleinterfaceGenericMethodDeclEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;
            	case 2:
            	    // JavaDecl.g:168:27: 'void'
            	    {
            	         this->matchToken(105, &FOLLOW_105_in_interfaceGenericMethodDecl882);
            	        if  (this->hasException())
            	        {
            	            goto ruleinterfaceGenericMethodDeclEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

             this->matchToken(Identifier, &FOLLOW_Identifier_in_interfaceGenericMethodDecl885);
            if  (this->hasException())
            {
                goto ruleinterfaceGenericMethodDeclEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl895);
            interfaceMethodDeclaratorRest();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleinterfaceGenericMethodDeclEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleinterfaceGenericMethodDeclEx; /* Prevent compiler warnings */
    ruleinterfaceGenericMethodDeclEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(33, interfaceGenericMethodDecl_StartIndex); }

    return ;
}
/* $ANTLR end interfaceGenericMethodDecl */

/**
 * $ANTLR start voidInterfaceMethodDeclaratorRest
 * JavaDecl.g:172:1: voidInterfaceMethodDeclaratorRest : formalParameters ( 'throws' qualifiedNameList )? ';' ;
 */
void
Java_JavaDecl::voidInterfaceMethodDeclaratorRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER voidInterfaceMethodDeclaratorRest_StartIndex;

    /* Initialize rule variables
     */
    voidInterfaceMethodDeclaratorRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(34)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:173:2: ( formalParameters ( 'throws' qualifiedNameList )? ';' )
        // JavaDecl.g:173:4: formalParameters ( 'throws' qualifiedNameList )? ';'
        {
            this->followPush(FOLLOW_formalParameters_in_voidInterfaceMethodDeclaratorRest907);
            formalParameters();

            this->followPop();
            if  (this->hasException())
            {
                goto rulevoidInterfaceMethodDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:173:21: ( 'throws' qualifiedNameList )?
            {
                int alt47=2;
                switch ( this->LA(1) )
                {
                    case 101:
                    	{
                    		alt47=1;
                    	}
                        break;
                }

                switch (alt47)
                {
            	case 1:
            	    // JavaDecl.g:173:22: 'throws' qualifiedNameList
            	    {
            	         this->matchToken(101, &FOLLOW_101_in_voidInterfaceMethodDeclaratorRest910);
            	        if  (this->hasException())
            	        {
            	            goto rulevoidInterfaceMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_qualifiedNameList_in_voidInterfaceMethodDeclaratorRest912);
            	        qualifiedNameList();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulevoidInterfaceMethodDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

             this->matchToken(47, &FOLLOW_47_in_voidInterfaceMethodDeclaratorRest916);
            if  (this->hasException())
            {
                goto rulevoidInterfaceMethodDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto rulevoidInterfaceMethodDeclaratorRestEx; /* Prevent compiler warnings */
    rulevoidInterfaceMethodDeclaratorRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(34, voidInterfaceMethodDeclaratorRest_StartIndex); }

    return ;
}
/* $ANTLR end voidInterfaceMethodDeclaratorRest */

/**
 * $ANTLR start constructorDeclaratorRest
 * JavaDecl.g:176:1: constructorDeclaratorRest : formalParameters ( 'throws' qualifiedNameList )? methodBody ;
 */
void
Java_JavaDecl::constructorDeclaratorRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER constructorDeclaratorRest_StartIndex;

    /* Initialize rule variables
     */
    constructorDeclaratorRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(35)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:177:2: ( formalParameters ( 'throws' qualifiedNameList )? methodBody )
        // JavaDecl.g:177:4: formalParameters ( 'throws' qualifiedNameList )? methodBody
        {
            this->followPush(FOLLOW_formalParameters_in_constructorDeclaratorRest928);
            formalParameters();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleconstructorDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:177:21: ( 'throws' qualifiedNameList )?
            {
                int alt48=2;
                switch ( this->LA(1) )
                {
                    case 101:
                    	{
                    		alt48=1;
                    	}
                        break;
                }

                switch (alt48)
                {
            	case 1:
            	    // JavaDecl.g:177:22: 'throws' qualifiedNameList
            	    {
            	         this->matchToken(101, &FOLLOW_101_in_constructorDeclaratorRest931);
            	        if  (this->hasException())
            	        {
            	            goto ruleconstructorDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_qualifiedNameList_in_constructorDeclaratorRest933);
            	        qualifiedNameList();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleconstructorDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

            this->followPush(FOLLOW_methodBody_in_constructorDeclaratorRest937);
            m_gJava->methodBody();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleconstructorDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleconstructorDeclaratorRestEx; /* Prevent compiler warnings */
    ruleconstructorDeclaratorRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(35, constructorDeclaratorRest_StartIndex); }

    return ;
}
/* $ANTLR end constructorDeclaratorRest */

/**
 * $ANTLR start constantDeclarator
 * JavaDecl.g:180:1: constantDeclarator : Identifier constantDeclaratorRest ;
 */
void
Java_JavaDecl::constantDeclarator()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER constantDeclarator_StartIndex;

    /* Initialize rule variables
     */
    constantDeclarator_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(36)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:181:2: ( Identifier constantDeclaratorRest )
        // JavaDecl.g:181:4: Identifier constantDeclaratorRest
        {
             this->matchToken(Identifier, &FOLLOW_Identifier_in_constantDeclarator948);
            if  (this->hasException())
            {
                goto ruleconstantDeclaratorEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_constantDeclaratorRest_in_constantDeclarator950);
            constantDeclaratorRest();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleconstantDeclaratorEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleconstantDeclaratorEx; /* Prevent compiler warnings */
    ruleconstantDeclaratorEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(36, constantDeclarator_StartIndex); }

    return ;
}
/* $ANTLR end constantDeclarator */

/**
 * $ANTLR start variableDeclarators
 * JavaDecl.g:184:1: variableDeclarators : variableDeclarator ( ',' variableDeclarator )* ;
 */
void
Java_JavaDecl::variableDeclarators()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER variableDeclarators_StartIndex;

    /* Initialize rule variables
     */
    variableDeclarators_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(37)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:185:2: ( variableDeclarator ( ',' variableDeclarator )* )
        // JavaDecl.g:185:4: variableDeclarator ( ',' variableDeclarator )*
        {
            this->followPush(FOLLOW_variableDeclarator_in_variableDeclarators962);
            variableDeclarator();

            this->followPop();
            if  (this->hasException())
            {
                goto rulevariableDeclaratorsEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:185:23: ( ',' variableDeclarator )*

            for (;;)
            {
                int alt49=2;
                switch ( this->LA(1) )
                {
                case 38:
                	{
                		alt49=1;
                	}
                    break;

                }

                switch (alt49)
                {
            	case 1:
            	    // JavaDecl.g:185:24: ',' variableDeclarator
            	    {
            	         this->matchToken(38, &FOLLOW_38_in_variableDeclarators965);
            	        if  (this->hasException())
            	        {
            	            goto rulevariableDeclaratorsEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_variableDeclarator_in_variableDeclarators967);
            	        variableDeclarator();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulevariableDeclaratorsEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop49;	/* break out of the loop */
            	    break;
                }
            }
            loop49: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto rulevariableDeclaratorsEx; /* Prevent compiler warnings */
    rulevariableDeclaratorsEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(37, variableDeclarators_StartIndex); }

    return ;
}
/* $ANTLR end variableDeclarators */

/**
 * $ANTLR start variableDeclarator
 * JavaDecl.g:188:1: variableDeclarator : Identifier variableDeclaratorRest ;
 */
void
Java_JavaDecl::variableDeclarator()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER variableDeclarator_StartIndex;

    /* Initialize rule variables
     */
    variableDeclarator_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(38)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:189:2: ( Identifier variableDeclaratorRest )
        // JavaDecl.g:189:4: Identifier variableDeclaratorRest
        {
             this->matchToken(Identifier, &FOLLOW_Identifier_in_variableDeclarator980);
            if  (this->hasException())
            {
                goto rulevariableDeclaratorEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_variableDeclaratorRest_in_variableDeclarator982);
            variableDeclaratorRest();

            this->followPop();
            if  (this->hasException())
            {
                goto rulevariableDeclaratorEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto rulevariableDeclaratorEx; /* Prevent compiler warnings */
    rulevariableDeclaratorEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(38, variableDeclarator_StartIndex); }

    return ;
}
/* $ANTLR end variableDeclarator */

/**
 * $ANTLR start variableDeclaratorRest
 * JavaDecl.g:192:1: variableDeclaratorRest : ( ( '[' ']' )+ ( '=' variableInitializer )? | '=' variableInitializer |);
 */
void
Java_JavaDecl::variableDeclaratorRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER variableDeclaratorRest_StartIndex;

    /* Initialize rule variables
     */
    variableDeclaratorRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(39)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:193:2: ( ( '[' ']' )+ ( '=' variableInitializer )? | '=' variableInitializer |)

            ANTLR_UINT32 alt52;

            alt52=3;

            switch ( this->LA(1) )
            {
            case 54:
            	{
            		alt52=1;
            	}
                break;
            case 49:
            	{
            		alt52=2;
            	}
                break;
            case EOF:
            case 38:
            case 47:
            	{
            		alt52=3;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 52 );
                ex->set_state( 0 );


                goto rulevariableDeclaratorRestEx;

            }

            switch (alt52)
            {
        	case 1:
        	    // JavaDecl.g:193:4: ( '[' ']' )+ ( '=' variableInitializer )?
        	    {
        	        // JavaDecl.g:193:4: ( '[' ']' )+
        	        {
        	            int cnt50=0;

        	            for (;;)
        	            {
        	                int alt50=2;
        	        	switch ( this->LA(1) )
        	        	{
        	        	case 54:
        	        		{
        	        			alt50=1;
        	        		}
        	        	    break;

        	        	}

        	        	switch (alt50)
        	        	{
        	        	    case 1:
        	        	        // JavaDecl.g:193:5: '[' ']'
        	        	        {
        	        	             this->matchToken(54, &FOLLOW_54_in_variableDeclaratorRest995);
        	        	            if  (this->hasException())
        	        	            {
        	        	                goto rulevariableDeclaratorRestEx;
        	        	            }
        	        	            if (this->hasFailed())
        	        	            {
        	        	                return ;
        	        	            }


        	        	             this->matchToken(55, &FOLLOW_55_in_variableDeclaratorRest997);
        	        	            if  (this->hasException())
        	        	            {
        	        	                goto rulevariableDeclaratorRestEx;
        	        	            }
        	        	            if (this->hasFailed())
        	        	            {
        	        	                return ;
        	        	            }


        	        	        }
        	        	        break;

        	        	    default:

        	        		if ( cnt50 >= 1 )
        	        		{
        	        		    goto loop50;
        	        		}
        	        		if (this->get_backtracking()>0)
        	        		{
        	        		    this->set_failedflag( true );
        	        		    return ;
        	        		}

        	        		/* mismatchedSetEx()
        	        		 */
        	        		new ANTLR_Exception< Java_JavaDeclImplTraits, EARLY_EXIT_EXCEPTION, StreamType>( this->get_rec(), "" );


        	        		goto rulevariableDeclaratorRestEx;
        	        	}
        	        	cnt50++;
        	            }
        	            loop50: ;	/* Jump to here if this rule does not match */
        	        }

        	        // JavaDecl.g:193:15: ( '=' variableInitializer )?
        	        {
        	            int alt51=2;
        	            switch ( this->LA(1) )
        	            {
        	                case 49:
        	                	{
        	                		alt51=1;
        	                	}
        	                    break;
        	            }

        	            switch (alt51)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:193:16: '=' variableInitializer
        	        	    {
        	        	         this->matchToken(49, &FOLLOW_49_in_variableDeclaratorRest1002);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto rulevariableDeclaratorRestEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	        this->followPush(FOLLOW_variableInitializer_in_variableDeclaratorRest1004);
        	        	        variableInitializer();

        	        	        this->followPop();
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto rulevariableDeclaratorRestEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	            }
        	        }

        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:194:4: '=' variableInitializer
        	    {
        	         this->matchToken(49, &FOLLOW_49_in_variableDeclaratorRest1011);
        	        if  (this->hasException())
        	        {
        	            goto rulevariableDeclaratorRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        this->followPush(FOLLOW_variableInitializer_in_variableDeclaratorRest1013);
        	        variableInitializer();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulevariableDeclaratorRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 3:
        	    // JavaDecl.g:196:2: 
        	    {
        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto rulevariableDeclaratorRestEx; /* Prevent compiler warnings */
    rulevariableDeclaratorRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(39, variableDeclaratorRest_StartIndex); }

    return ;
}
/* $ANTLR end variableDeclaratorRest */

/**
 * $ANTLR start constantDeclaratorsRest
 * JavaDecl.g:198:1: constantDeclaratorsRest : constantDeclaratorRest ( ',' constantDeclarator )* ;
 */
void
Java_JavaDecl::constantDeclaratorsRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER constantDeclaratorsRest_StartIndex;

    /* Initialize rule variables
     */
    constantDeclaratorsRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(40)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:199:5: ( constantDeclaratorRest ( ',' constantDeclarator )* )
        // JavaDecl.g:199:9: constantDeclaratorRest ( ',' constantDeclarator )*
        {
            this->followPush(FOLLOW_constantDeclaratorRest_in_constantDeclaratorsRest1033);
            constantDeclaratorRest();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleconstantDeclaratorsRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:199:32: ( ',' constantDeclarator )*

            for (;;)
            {
                int alt53=2;
                switch ( this->LA(1) )
                {
                case 38:
                	{
                		alt53=1;
                	}
                    break;

                }

                switch (alt53)
                {
            	case 1:
            	    // JavaDecl.g:199:33: ',' constantDeclarator
            	    {
            	         this->matchToken(38, &FOLLOW_38_in_constantDeclaratorsRest1036);
            	        if  (this->hasException())
            	        {
            	            goto ruleconstantDeclaratorsRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_constantDeclarator_in_constantDeclaratorsRest1038);
            	        constantDeclarator();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleconstantDeclaratorsRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop53;	/* break out of the loop */
            	    break;
                }
            }
            loop53: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleconstantDeclaratorsRestEx; /* Prevent compiler warnings */
    ruleconstantDeclaratorsRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(40, constantDeclaratorsRest_StartIndex); }

    return ;
}
/* $ANTLR end constantDeclaratorsRest */

/**
 * $ANTLR start constantDeclaratorRest
 * JavaDecl.g:202:1: constantDeclaratorRest : ( '[' ']' )* '=' variableInitializer ;
 */
void
Java_JavaDecl::constantDeclaratorRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER constantDeclaratorRest_StartIndex;

    /* Initialize rule variables
     */
    constantDeclaratorRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(41)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:203:2: ( ( '[' ']' )* '=' variableInitializer )
        // JavaDecl.g:203:4: ( '[' ']' )* '=' variableInitializer
        {
            // JavaDecl.g:203:4: ( '[' ']' )*

            for (;;)
            {
                int alt54=2;
                switch ( this->LA(1) )
                {
                case 54:
                	{
                		alt54=1;
                	}
                    break;

                }

                switch (alt54)
                {
            	case 1:
            	    // JavaDecl.g:203:5: '[' ']'
            	    {
            	         this->matchToken(54, &FOLLOW_54_in_constantDeclaratorRest1055);
            	        if  (this->hasException())
            	        {
            	            goto ruleconstantDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	         this->matchToken(55, &FOLLOW_55_in_constantDeclaratorRest1057);
            	        if  (this->hasException())
            	        {
            	            goto ruleconstantDeclaratorRestEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop54;	/* break out of the loop */
            	    break;
                }
            }
            loop54: ; /* Jump out to here if this rule does not match */


             this->matchToken(49, &FOLLOW_49_in_constantDeclaratorRest1061);
            if  (this->hasException())
            {
                goto ruleconstantDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_variableInitializer_in_constantDeclaratorRest1063);
            variableInitializer();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleconstantDeclaratorRestEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleconstantDeclaratorRestEx; /* Prevent compiler warnings */
    ruleconstantDeclaratorRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(41, constantDeclaratorRest_StartIndex); }

    return ;
}
/* $ANTLR end constantDeclaratorRest */

/**
 * $ANTLR start variableDeclaratorId
 * JavaDecl.g:206:1: variableDeclaratorId : Identifier ( '[' ']' )* ;
 */
void
Java_JavaDecl::variableDeclaratorId()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER variableDeclaratorId_StartIndex;

    /* Initialize rule variables
     */
    variableDeclaratorId_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(42)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:207:2: ( Identifier ( '[' ']' )* )
        // JavaDecl.g:207:4: Identifier ( '[' ']' )*
        {
             this->matchToken(Identifier, &FOLLOW_Identifier_in_variableDeclaratorId1075);
            if  (this->hasException())
            {
                goto rulevariableDeclaratorIdEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:207:15: ( '[' ']' )*

            for (;;)
            {
                int alt55=2;
                switch ( this->LA(1) )
                {
                case 54:
                	{
                		alt55=1;
                	}
                    break;

                }

                switch (alt55)
                {
            	case 1:
            	    // JavaDecl.g:207:16: '[' ']'
            	    {
            	         this->matchToken(54, &FOLLOW_54_in_variableDeclaratorId1078);
            	        if  (this->hasException())
            	        {
            	            goto rulevariableDeclaratorIdEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	         this->matchToken(55, &FOLLOW_55_in_variableDeclaratorId1080);
            	        if  (this->hasException())
            	        {
            	            goto rulevariableDeclaratorIdEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop55;	/* break out of the loop */
            	    break;
                }
            }
            loop55: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto rulevariableDeclaratorIdEx; /* Prevent compiler warnings */
    rulevariableDeclaratorIdEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(42, variableDeclaratorId_StartIndex); }

    return ;
}
/* $ANTLR end variableDeclaratorId */

/**
 * $ANTLR start variableInitializer
 * JavaDecl.g:210:1: variableInitializer : ( arrayInitializer | expression );
 */
void
Java_JavaDecl::variableInitializer()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER variableInitializer_StartIndex;

    /* Initialize rule variables
     */
    variableInitializer_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(43)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:211:2: ( arrayInitializer | expression )

            ANTLR_UINT32 alt56;

            alt56=2;

            switch ( this->LA(1) )
            {
            case 108:
            	{
            		alt56=1;
            	}
                break;
            case CharacterLiteral:
            case DecimalLiteral:
            case FloatingPointLiteral:
            case HexLiteral:
            case Identifier:
            case OctalLiteral:
            case StringLiteral:
            case 24:
            case 31:
            case 35:
            case 36:
            case 39:
            case 40:
            case 48:
            case 60:
            case 62:
            case 65:
            case 70:
            case 73:
            case 76:
            case 82:
            case 84:
            case 86:
            case 87:
            case 93:
            case 96:
            case 99:
            case 103:
            case 105:
            case 113:
            	{
            		alt56=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 56 );
                ex->set_state( 0 );


                goto rulevariableInitializerEx;

            }

            switch (alt56)
            {
        	case 1:
        	    // JavaDecl.g:211:4: arrayInitializer
        	    {
        	        this->followPush(FOLLOW_arrayInitializer_in_variableInitializer1093);
        	        arrayInitializer();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulevariableInitializerEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:212:9: expression
        	    {
        	        this->followPush(FOLLOW_expression_in_variableInitializer1103);
        	        m_gJava->expression();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulevariableInitializerEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto rulevariableInitializerEx; /* Prevent compiler warnings */
    rulevariableInitializerEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(43, variableInitializer_StartIndex); }

    return ;
}
/* $ANTLR end variableInitializer */

/**
 * $ANTLR start arrayInitializer
 * JavaDecl.g:215:1: arrayInitializer : '{' ( variableInitializer ( ',' variableInitializer )* ( ',' )? )? '}' ;
 */
void
Java_JavaDecl::arrayInitializer()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER arrayInitializer_StartIndex;

    /* Initialize rule variables
     */
    arrayInitializer_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(44)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:216:2: ( '{' ( variableInitializer ( ',' variableInitializer )* ( ',' )? )? '}' )
        // JavaDecl.g:216:4: '{' ( variableInitializer ( ',' variableInitializer )* ( ',' )? )? '}'
        {
             this->matchToken(108, &FOLLOW_108_in_arrayInitializer1115);
            if  (this->hasException())
            {
                goto rulearrayInitializerEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:216:8: ( variableInitializer ( ',' variableInitializer )* ( ',' )? )?
            {
                int alt59=2;
                switch ( this->LA(1) )
                {
                    case CharacterLiteral:
                    case DecimalLiteral:
                    case FloatingPointLiteral:
                    case HexLiteral:
                    case Identifier:
                    case OctalLiteral:
                    case StringLiteral:
                    case 24:
                    case 31:
                    case 35:
                    case 36:
                    case 39:
                    case 40:
                    case 48:
                    case 60:
                    case 62:
                    case 65:
                    case 70:
                    case 73:
                    case 76:
                    case 82:
                    case 84:
                    case 86:
                    case 87:
                    case 93:
                    case 96:
                    case 99:
                    case 103:
                    case 105:
                    case 108:
                    case 113:
                    	{
                    		alt59=1;
                    	}
                        break;
                }

                switch (alt59)
                {
            	case 1:
            	    // JavaDecl.g:216:9: variableInitializer ( ',' variableInitializer )* ( ',' )?
            	    {
            	        this->followPush(FOLLOW_variableInitializer_in_arrayInitializer1118);
            	        variableInitializer();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulearrayInitializerEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        // JavaDecl.g:216:29: ( ',' variableInitializer )*

            	        for (;;)
            	        {
            	            int alt57=2;
            	            switch ( this->LA(1) )
            	            {
            	            case 38:
            	            	{
            	            		switch ( this->LA(2) )
            	            		{
            	            		case CharacterLiteral:
            	            		case DecimalLiteral:
            	            		case FloatingPointLiteral:
            	            		case HexLiteral:
            	            		case Identifier:
            	            		case OctalLiteral:
            	            		case StringLiteral:
            	            		case 24:
            	            		case 31:
            	            		case 35:
            	            		case 36:
            	            		case 39:
            	            		case 40:
            	            		case 48:
            	            		case 60:
            	            		case 62:
            	            		case 65:
            	            		case 70:
            	            		case 73:
            	            		case 76:
            	            		case 82:
            	            		case 84:
            	            		case 86:
            	            		case 87:
            	            		case 93:
            	            		case 96:
            	            		case 99:
            	            		case 103:
            	            		case 105:
            	            		case 108:
            	            		case 113:
            	            			{
            	            				alt57=1;
            	            			}
            	            		    break;

            	            		}

            	            	}
            	                break;

            	            }

            	            switch (alt57)
            	            {
            	        	case 1:
            	        	    // JavaDecl.g:216:30: ',' variableInitializer
            	        	    {
            	        	         this->matchToken(38, &FOLLOW_38_in_arrayInitializer1121);
            	        	        if  (this->hasException())
            	        	        {
            	        	            goto rulearrayInitializerEx;
            	        	        }
            	        	        if (this->hasFailed())
            	        	        {
            	        	            return ;
            	        	        }


            	        	        this->followPush(FOLLOW_variableInitializer_in_arrayInitializer1123);
            	        	        variableInitializer();

            	        	        this->followPop();
            	        	        if  (this->hasException())
            	        	        {
            	        	            goto rulearrayInitializerEx;
            	        	        }
            	        	        if (this->hasFailed())
            	        	        {
            	        	            return ;
            	        	        }


            	        	    }
            	        	    break;

            	        	default:
            	        	    goto loop57;	/* break out of the loop */
            	        	    break;
            	            }
            	        }
            	        loop57: ; /* Jump out to here if this rule does not match */


            	        // JavaDecl.g:216:56: ( ',' )?
            	        {
            	            int alt58=2;
            	            switch ( this->LA(1) )
            	            {
            	                case 38:
            	                	{
            	                		alt58=1;
            	                	}
            	                    break;
            	            }

            	            switch (alt58)
            	            {
            	        	case 1:
            	        	    // JavaDecl.g:216:57: ','
            	        	    {
            	        	         this->matchToken(38, &FOLLOW_38_in_arrayInitializer1128);
            	        	        if  (this->hasException())
            	        	        {
            	        	            goto rulearrayInitializerEx;
            	        	        }
            	        	        if (this->hasFailed())
            	        	        {
            	        	            return ;
            	        	        }


            	        	    }
            	        	    break;

            	            }
            	        }

            	    }
            	    break;

                }
            }

             this->matchToken(112, &FOLLOW_112_in_arrayInitializer1135);
            if  (this->hasException())
            {
                goto rulearrayInitializerEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto rulearrayInitializerEx; /* Prevent compiler warnings */
    rulearrayInitializerEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(44, arrayInitializer_StartIndex); }

    return ;
}
/* $ANTLR end arrayInitializer */

/**
 * $ANTLR start modifier
 * JavaDecl.g:219:1: modifier : ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' );
 */
void
Java_JavaDecl::modifier()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER modifier_StartIndex;

    /* Initialize rule variables
     */
    modifier_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(45)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:220:5: ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )

            ANTLR_UINT32 alt60;

            alt60=12;

            switch ( this->LA(1) )
            {
            case 53:
            	{
            		alt60=1;
            	}
                break;
            case 91:
            	{
            		alt60=2;
            	}
                break;
            case 90:
            	{
            		alt60=3;
            	}
                break;
            case 89:
            	{
            		alt60=4;
            	}
                break;
            case 94:
            	{
            		alt60=5;
            	}
                break;
            case 58:
            	{
            		alt60=6;
            	}
                break;
            case 74:
            	{
            		alt60=7;
            	}
                break;
            case 85:
            	{
            		alt60=8;
            	}
                break;
            case 98:
            	{
            		alt60=9;
            	}
                break;
            case 102:
            	{
            		alt60=10;
            	}
                break;
            case 106:
            	{
            		alt60=11;
            	}
                break;
            case 95:
            	{
            		alt60=12;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 60 );
                ex->set_state( 0 );


                goto rulemodifierEx;

            }

            switch (alt60)
            {
        	case 1:
        	    // JavaDecl.g:220:9: annotation
        	    {
        	        this->followPush(FOLLOW_annotation_in_modifier1151);
        	        m_gJava->annotation();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:221:9: 'public'
        	    {
        	         this->matchToken(91, &FOLLOW_91_in_modifier1161);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 3:
        	    // JavaDecl.g:222:9: 'protected'
        	    {
        	         this->matchToken(90, &FOLLOW_90_in_modifier1171);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 4:
        	    // JavaDecl.g:223:9: 'private'
        	    {
        	         this->matchToken(89, &FOLLOW_89_in_modifier1181);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 5:
        	    // JavaDecl.g:224:9: 'static'
        	    {
        	         this->matchToken(94, &FOLLOW_94_in_modifier1191);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 6:
        	    // JavaDecl.g:225:9: 'abstract'
        	    {
        	         this->matchToken(58, &FOLLOW_58_in_modifier1201);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 7:
        	    // JavaDecl.g:226:9: 'final'
        	    {
        	         this->matchToken(74, &FOLLOW_74_in_modifier1211);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 8:
        	    // JavaDecl.g:227:9: 'native'
        	    {
        	         this->matchToken(85, &FOLLOW_85_in_modifier1221);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 9:
        	    // JavaDecl.g:228:9: 'synchronized'
        	    {
        	         this->matchToken(98, &FOLLOW_98_in_modifier1231);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 10:
        	    // JavaDecl.g:229:9: 'transient'
        	    {
        	         this->matchToken(102, &FOLLOW_102_in_modifier1241);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 11:
        	    // JavaDecl.g:230:9: 'volatile'
        	    {
        	         this->matchToken(106, &FOLLOW_106_in_modifier1251);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 12:
        	    // JavaDecl.g:231:9: 'strictfp'
        	    {
        	         this->matchToken(95, &FOLLOW_95_in_modifier1261);
        	        if  (this->hasException())
        	        {
        	            goto rulemodifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto rulemodifierEx; /* Prevent compiler warnings */
    rulemodifierEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(45, modifier_StartIndex); }

    return ;
}
/* $ANTLR end modifier */

/**
 * $ANTLR start packageOrTypeName
 * JavaDecl.g:234:1: packageOrTypeName : Identifier ( '.' Identifier )* ;
 */
void
Java_JavaDecl::packageOrTypeName()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER packageOrTypeName_StartIndex;

    /* Initialize rule variables
     */
    packageOrTypeName_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(46)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:235:2: ( Identifier ( '.' Identifier )* )
        // JavaDecl.g:235:4: Identifier ( '.' Identifier )*
        {
             this->matchToken(Identifier, &FOLLOW_Identifier_in_packageOrTypeName1275);
            if  (this->hasException())
            {
                goto rulepackageOrTypeNameEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:235:15: ( '.' Identifier )*

            for (;;)
            {
                int alt61=2;
                switch ( this->LA(1) )
                {
                case 42:
                	{
                		switch ( this->LA(2) )
                		{
                		case Identifier:
                			{
                				{
                				   /* dfaLoopbackState(k,edges,eotPredictsAlt,description,stateNumber,semPredState)
                				    */
                				    int LA61_2 = this->LA(3);
                				    if ( (this->msynpred( antlr3::ClassForwarder<synpred81_JavaDecl>() )))
                				    {
                				        alt61=1;
                				    }

                				}
                			}
                		    break;

                		}

                	}
                    break;

                }

                switch (alt61)
                {
            	case 1:
            	    // JavaDecl.g:235:16: '.' Identifier
            	    {
            	         this->matchToken(42, &FOLLOW_42_in_packageOrTypeName1278);
            	        if  (this->hasException())
            	        {
            	            goto rulepackageOrTypeNameEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	         this->matchToken(Identifier, &FOLLOW_Identifier_in_packageOrTypeName1280);
            	        if  (this->hasException())
            	        {
            	            goto rulepackageOrTypeNameEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop61;	/* break out of the loop */
            	    break;
                }
            }
            loop61: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto rulepackageOrTypeNameEx; /* Prevent compiler warnings */
    rulepackageOrTypeNameEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(46, packageOrTypeName_StartIndex); }

    return ;
}
/* $ANTLR end packageOrTypeName */

/**
 * $ANTLR start enumConstantName
 * JavaDecl.g:238:1: enumConstantName : Identifier ;
 */
void
Java_JavaDecl::enumConstantName()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER enumConstantName_StartIndex;

    /* Initialize rule variables
     */
    enumConstantName_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(47)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:239:5: ( Identifier )
        // JavaDecl.g:239:9: Identifier
        {
             this->matchToken(Identifier, &FOLLOW_Identifier_in_enumConstantName1298);
            if  (this->hasException())
            {
                goto ruleenumConstantNameEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleenumConstantNameEx; /* Prevent compiler warnings */
    ruleenumConstantNameEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(47, enumConstantName_StartIndex); }

    return ;
}
/* $ANTLR end enumConstantName */

/**
 * $ANTLR start typeName
 * JavaDecl.g:242:1: typeName : ( Identifier | packageOrTypeName '.' Identifier );
 */
void
Java_JavaDecl::typeName()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER typeName_StartIndex;

    /* Initialize rule variables
     */
    typeName_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(48)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:243:2: ( Identifier | packageOrTypeName '.' Identifier )

            ANTLR_UINT32 alt62;

            alt62=2;

            switch ( this->LA(1) )
            {
            case Identifier:
            	{
            		switch ( this->LA(2) )
            		{
            		case EOF:
            			{
            				alt62=1;
            			}
            		    break;
            		case 42:
            			{
            				alt62=2;
            			}
            		    break;

            		default:
            		    if (this->get_backtracking()>0)
            		    {
            		        this->set_failedflag( true );
            		        return ;
            		    }

            		    ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
            		    ex->set_decisionNum( 62 );
            		    ex->set_state( 1 );


            		    goto ruletypeNameEx;

            		}

            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 62 );
                ex->set_state( 0 );


                goto ruletypeNameEx;

            }

            switch (alt62)
            {
        	case 1:
        	    // JavaDecl.g:243:6: Identifier
        	    {
        	         this->matchToken(Identifier, &FOLLOW_Identifier_in_typeName1314);
        	        if  (this->hasException())
        	        {
        	            goto ruletypeNameEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:244:9: packageOrTypeName '.' Identifier
        	    {
        	        this->followPush(FOLLOW_packageOrTypeName_in_typeName1324);
        	        packageOrTypeName();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruletypeNameEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	         this->matchToken(42, &FOLLOW_42_in_typeName1326);
        	        if  (this->hasException())
        	        {
        	            goto ruletypeNameEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	         this->matchToken(Identifier, &FOLLOW_Identifier_in_typeName1328);
        	        if  (this->hasException())
        	        {
        	            goto ruletypeNameEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruletypeNameEx; /* Prevent compiler warnings */
    ruletypeNameEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(48, typeName_StartIndex); }

    return ;
}
/* $ANTLR end typeName */

/**
 * $ANTLR start type
 * JavaDecl.g:247:1: type : ( Identifier ( typeArguments )? ( '.' Identifier ( typeArguments )? )* ( '[' ']' )* | primitiveType ( '[' ']' )* );
 */
void
Java_JavaDecl::type()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER type_StartIndex;

    /* Initialize rule variables
     */
    type_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(49)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:248:2: ( Identifier ( typeArguments )? ( '.' Identifier ( typeArguments )? )* ( '[' ']' )* | primitiveType ( '[' ']' )* )

            ANTLR_UINT32 alt68;

            alt68=2;

            switch ( this->LA(1) )
            {
            case Identifier:
            	{
            		alt68=1;
            	}
                break;
            case 60:
            case 62:
            case 65:
            case 70:
            case 76:
            case 82:
            case 84:
            case 93:
            	{
            		alt68=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 68 );
                ex->set_state( 0 );


                goto ruletypeEx;

            }

            switch (alt68)
            {
        	case 1:
        	    // JavaDecl.g:248:4: Identifier ( typeArguments )? ( '.' Identifier ( typeArguments )? )* ( '[' ']' )*
        	    {
        	         this->matchToken(Identifier, &FOLLOW_Identifier_in_type1339);
        	        if  (this->hasException())
        	        {
        	            goto ruletypeEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        // JavaDecl.g:248:15: ( typeArguments )?
        	        {
        	            int alt63=2;
        	            switch ( this->LA(1) )
        	            {
        	                case 48:
        	                	{
        	                		switch ( this->LA(2) )
        	                		{
        	                		    case Identifier:
        	                		    case 52:
        	                		    case 60:
        	                		    case 62:
        	                		    case 65:
        	                		    case 70:
        	                		    case 76:
        	                		    case 82:
        	                		    case 84:
        	                		    case 93:
        	                		    	{
        	                		    		alt63=1;
        	                		    	}
        	                		        break;
        	                		}

        	                	}
        	                    break;
        	            }

        	            switch (alt63)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:248:16: typeArguments
        	        	    {
        	        	        this->followPush(FOLLOW_typeArguments_in_type1342);
        	        	        typeArguments();

        	        	        this->followPop();
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruletypeEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	            }
        	        }

        	        // JavaDecl.g:248:32: ( '.' Identifier ( typeArguments )? )*

        	        for (;;)
        	        {
        	            int alt65=2;
        	            switch ( this->LA(1) )
        	            {
        	            case 42:
        	            	{
        	            		alt65=1;
        	            	}
        	                break;

        	            }

        	            switch (alt65)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:248:33: '.' Identifier ( typeArguments )?
        	        	    {
        	        	         this->matchToken(42, &FOLLOW_42_in_type1347);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruletypeEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	         this->matchToken(Identifier, &FOLLOW_Identifier_in_type1349);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruletypeEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	        // JavaDecl.g:248:48: ( typeArguments )?
        	        	        {
        	        	            int alt64=2;
        	        	            switch ( this->LA(1) )
        	        	            {
        	        	                case 48:
        	        	                	{
        	        	                		switch ( this->LA(2) )
        	        	                		{
        	        	                		    case Identifier:
        	        	                		    case 52:
        	        	                		    case 60:
        	        	                		    case 62:
        	        	                		    case 65:
        	        	                		    case 70:
        	        	                		    case 76:
        	        	                		    case 82:
        	        	                		    case 84:
        	        	                		    case 93:
        	        	                		    	{
        	        	                		    		alt64=1;
        	        	                		    	}
        	        	                		        break;
        	        	                		}

        	        	                	}
        	        	                    break;
        	        	            }

        	        	            switch (alt64)
        	        	            {
        	        	        	case 1:
        	        	        	    // JavaDecl.g:248:49: typeArguments
        	        	        	    {
        	        	        	        this->followPush(FOLLOW_typeArguments_in_type1352);
        	        	        	        typeArguments();

        	        	        	        this->followPop();
        	        	        	        if  (this->hasException())
        	        	        	        {
        	        	        	            goto ruletypeEx;
        	        	        	        }
        	        	        	        if (this->hasFailed())
        	        	        	        {
        	        	        	            return ;
        	        	        	        }


        	        	        	    }
        	        	        	    break;

        	        	            }
        	        	        }

        	        	    }
        	        	    break;

        	        	default:
        	        	    goto loop65;	/* break out of the loop */
        	        	    break;
        	            }
        	        }
        	        loop65: ; /* Jump out to here if this rule does not match */


        	        // JavaDecl.g:248:68: ( '[' ']' )*

        	        for (;;)
        	        {
        	            int alt66=2;
        	            switch ( this->LA(1) )
        	            {
        	            case 54:
        	            	{
        	            		alt66=1;
        	            	}
        	                break;

        	            }

        	            switch (alt66)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:248:69: '[' ']'
        	        	    {
        	        	         this->matchToken(54, &FOLLOW_54_in_type1360);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruletypeEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	         this->matchToken(55, &FOLLOW_55_in_type1362);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruletypeEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	        	default:
        	        	    goto loop66;	/* break out of the loop */
        	        	    break;
        	            }
        	        }
        	        loop66: ; /* Jump out to here if this rule does not match */


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:249:4: primitiveType ( '[' ']' )*
        	    {
        	        this->followPush(FOLLOW_primitiveType_in_type1369);
        	        primitiveType();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruletypeEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        // JavaDecl.g:249:18: ( '[' ']' )*

        	        for (;;)
        	        {
        	            int alt67=2;
        	            switch ( this->LA(1) )
        	            {
        	            case 54:
        	            	{
        	            		alt67=1;
        	            	}
        	                break;

        	            }

        	            switch (alt67)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:249:19: '[' ']'
        	        	    {
        	        	         this->matchToken(54, &FOLLOW_54_in_type1372);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruletypeEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	         this->matchToken(55, &FOLLOW_55_in_type1374);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruletypeEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	        	default:
        	        	    goto loop67;	/* break out of the loop */
        	        	    break;
        	            }
        	        }
        	        loop67: ; /* Jump out to here if this rule does not match */


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruletypeEx; /* Prevent compiler warnings */
    ruletypeEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(49, type_StartIndex); }

    return ;
}
/* $ANTLR end type */

/**
 * $ANTLR start primitiveType
 * JavaDecl.g:252:1: primitiveType : ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' );
 */
void
Java_JavaDecl::primitiveType()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER primitiveType_StartIndex;

    /* Initialize rule variables
     */
    primitiveType_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(50)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:253:5: ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' )
        // JavaDecl.g:
        {
            if ( this->LA(1) == 60 || this->LA(1) == 62 || this->LA(1) == 65 || this->LA(1) == 70 || this->LA(1) == 76 || this->LA(1) == 82 || this->LA(1) == 84 || this->LA(1) == 93 )
            {
                this->consume();
                this->set_perror_recovery(false);
                 this->set_failedflag(false); 

            }
            else
            {
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                new ANTLR_Exception< Java_JavaDeclImplTraits, MISMATCHED_SET_EXCEPTION, StreamType>( this->get_rec(), "" );
                this->get_exception()->set_expectingSet(NULL);

                goto ruleprimitiveTypeEx;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleprimitiveTypeEx; /* Prevent compiler warnings */
    ruleprimitiveTypeEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(50, primitiveType_StartIndex); }

    return ;
}
/* $ANTLR end primitiveType */

/**
 * $ANTLR start variableModifier
 * JavaDecl.g:263:1: variableModifier : ( 'final' | annotation );
 */
void
Java_JavaDecl::variableModifier()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER variableModifier_StartIndex;

    /* Initialize rule variables
     */
    variableModifier_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(51)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:264:2: ( 'final' | annotation )

            ANTLR_UINT32 alt69;

            alt69=2;

            switch ( this->LA(1) )
            {
            case 74:
            	{
            		alt69=1;
            	}
                break;
            case 53:
            	{
            		alt69=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 69 );
                ex->set_state( 0 );


                goto rulevariableModifierEx;

            }

            switch (alt69)
            {
        	case 1:
        	    // JavaDecl.g:264:4: 'final'
        	    {
        	         this->matchToken(74, &FOLLOW_74_in_variableModifier1462);
        	        if  (this->hasException())
        	        {
        	            goto rulevariableModifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:265:9: annotation
        	    {
        	        this->followPush(FOLLOW_annotation_in_variableModifier1472);
        	        m_gJava->annotation();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto rulevariableModifierEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto rulevariableModifierEx; /* Prevent compiler warnings */
    rulevariableModifierEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(51, variableModifier_StartIndex); }

    return ;
}
/* $ANTLR end variableModifier */

/**
 * $ANTLR start typeArguments
 * JavaDecl.g:268:1: typeArguments : '<' typeArgument ( ',' typeArgument )* '>' ;
 */
void
Java_JavaDecl::typeArguments()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER typeArguments_StartIndex;

    /* Initialize rule variables
     */
    typeArguments_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(52)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:269:2: ( '<' typeArgument ( ',' typeArgument )* '>' )
        // JavaDecl.g:269:4: '<' typeArgument ( ',' typeArgument )* '>'
        {
             this->matchToken(48, &FOLLOW_48_in_typeArguments1483);
            if  (this->hasException())
            {
                goto ruletypeArgumentsEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            this->followPush(FOLLOW_typeArgument_in_typeArguments1485);
            typeArgument();

            this->followPop();
            if  (this->hasException())
            {
                goto ruletypeArgumentsEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:269:21: ( ',' typeArgument )*

            for (;;)
            {
                int alt70=2;
                switch ( this->LA(1) )
                {
                case 38:
                	{
                		alt70=1;
                	}
                    break;

                }

                switch (alt70)
                {
            	case 1:
            	    // JavaDecl.g:269:22: ',' typeArgument
            	    {
            	         this->matchToken(38, &FOLLOW_38_in_typeArguments1488);
            	        if  (this->hasException())
            	        {
            	            goto ruletypeArgumentsEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_typeArgument_in_typeArguments1490);
            	        typeArgument();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruletypeArgumentsEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop70;	/* break out of the loop */
            	    break;
                }
            }
            loop70: ; /* Jump out to here if this rule does not match */


             this->matchToken(51, &FOLLOW_51_in_typeArguments1494);
            if  (this->hasException())
            {
                goto ruletypeArgumentsEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruletypeArgumentsEx; /* Prevent compiler warnings */
    ruletypeArgumentsEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(52, typeArguments_StartIndex); }

    return ;
}
/* $ANTLR end typeArguments */

/**
 * $ANTLR start typeArgument
 * JavaDecl.g:272:1: typeArgument : ( type | '?' ( ( 'extends' | 'super' ) type )? );
 */
void
Java_JavaDecl::typeArgument()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER typeArgument_StartIndex;

    /* Initialize rule variables
     */
    typeArgument_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(53)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:273:2: ( type | '?' ( ( 'extends' | 'super' ) type )? )

            ANTLR_UINT32 alt72;

            alt72=2;

            switch ( this->LA(1) )
            {
            case Identifier:
            case 60:
            case 62:
            case 65:
            case 70:
            case 76:
            case 82:
            case 84:
            case 93:
            	{
            		alt72=1;
            	}
                break;
            case 52:
            	{
            		alt72=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 72 );
                ex->set_state( 0 );


                goto ruletypeArgumentEx;

            }

            switch (alt72)
            {
        	case 1:
        	    // JavaDecl.g:273:4: type
        	    {
        	        this->followPush(FOLLOW_type_in_typeArgument1506);
        	        type();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruletypeArgumentEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:274:4: '?' ( ( 'extends' | 'super' ) type )?
        	    {
        	         this->matchToken(52, &FOLLOW_52_in_typeArgument1511);
        	        if  (this->hasException())
        	        {
        	            goto ruletypeArgumentEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        // JavaDecl.g:274:8: ( ( 'extends' | 'super' ) type )?
        	        {
        	            int alt71=2;
        	            switch ( this->LA(1) )
        	            {
        	                case 72:
        	                case 96:
        	                	{
        	                		alt71=1;
        	                	}
        	                    break;
        	            }

        	            switch (alt71)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:274:9: ( 'extends' | 'super' ) type
        	        	    {
        	        	        if ( this->LA(1) == 72 || this->LA(1) == 96 )
        	        	        {
        	        	            this->consume();
        	        	            this->set_perror_recovery(false);
        	        	             this->set_failedflag(false); 

        	        	        }
        	        	        else
        	        	        {
        	        	            if (this->get_backtracking()>0)
        	        	            {
        	        	                this->set_failedflag( true );
        	        	                return ;
        	        	            }

        	        	            new ANTLR_Exception< Java_JavaDeclImplTraits, MISMATCHED_SET_EXCEPTION, StreamType>( this->get_rec(), "" );
        	        	            this->get_exception()->set_expectingSet(NULL);

        	        	            goto ruletypeArgumentEx;
        	        	        }


        	        	        this->followPush(FOLLOW_type_in_typeArgument1522);
        	        	        type();

        	        	        this->followPop();
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruletypeArgumentEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	            }
        	        }

        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruletypeArgumentEx; /* Prevent compiler warnings */
    ruletypeArgumentEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(53, typeArgument_StartIndex); }

    return ;
}
/* $ANTLR end typeArgument */

/**
 * $ANTLR start qualifiedNameList
 * JavaDecl.g:277:1: qualifiedNameList : qualifiedName ( ',' qualifiedName )* ;
 */
void
Java_JavaDecl::qualifiedNameList()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER qualifiedNameList_StartIndex;

    /* Initialize rule variables
     */
    qualifiedNameList_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(54)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:278:2: ( qualifiedName ( ',' qualifiedName )* )
        // JavaDecl.g:278:4: qualifiedName ( ',' qualifiedName )*
        {
            this->followPush(FOLLOW_qualifiedName_in_qualifiedNameList1536);
            qualifiedName();

            this->followPop();
            if  (this->hasException())
            {
                goto rulequalifiedNameListEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:278:18: ( ',' qualifiedName )*

            for (;;)
            {
                int alt73=2;
                switch ( this->LA(1) )
                {
                case 38:
                	{
                		alt73=1;
                	}
                    break;

                }

                switch (alt73)
                {
            	case 1:
            	    // JavaDecl.g:278:19: ',' qualifiedName
            	    {
            	         this->matchToken(38, &FOLLOW_38_in_qualifiedNameList1539);
            	        if  (this->hasException())
            	        {
            	            goto rulequalifiedNameListEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	        this->followPush(FOLLOW_qualifiedName_in_qualifiedNameList1541);
            	        qualifiedName();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto rulequalifiedNameListEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop73;	/* break out of the loop */
            	    break;
                }
            }
            loop73: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto rulequalifiedNameListEx; /* Prevent compiler warnings */
    rulequalifiedNameListEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(54, qualifiedNameList_StartIndex); }

    return ;
}
/* $ANTLR end qualifiedNameList */

/**
 * $ANTLR start formalParameters
 * JavaDecl.g:281:1: formalParameters : '(' ( formalParameterDecls )? ')' ;
 */
void
Java_JavaDecl::formalParameters()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER formalParameters_StartIndex;

    /* Initialize rule variables
     */
    formalParameters_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(55)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:282:2: ( '(' ( formalParameterDecls )? ')' )
        // JavaDecl.g:282:4: '(' ( formalParameterDecls )? ')'
        {
             this->matchToken(31, &FOLLOW_31_in_formalParameters1555);
            if  (this->hasException())
            {
                goto ruleformalParametersEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:282:8: ( formalParameterDecls )?
            {
                int alt74=2;
                switch ( this->LA(1) )
                {
                    case Identifier:
                    case 53:
                    case 60:
                    case 62:
                    case 65:
                    case 70:
                    case 74:
                    case 76:
                    case 82:
                    case 84:
                    case 93:
                    	{
                    		alt74=1;
                    	}
                        break;
                }

                switch (alt74)
                {
            	case 1:
            	    // JavaDecl.g:282:8: formalParameterDecls
            	    {
            	        this->followPush(FOLLOW_formalParameterDecls_in_formalParameters1557);
            	        formalParameterDecls();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleformalParametersEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

             this->matchToken(32, &FOLLOW_32_in_formalParameters1560);
            if  (this->hasException())
            {
                goto ruleformalParametersEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


        }

    }
    // This is where rules clean up and exit
    //
    goto ruleformalParametersEx; /* Prevent compiler warnings */
    ruleformalParametersEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(55, formalParameters_StartIndex); }

    return ;
}
/* $ANTLR end formalParameters */

/**
 * $ANTLR start formalParameterDecls
 * JavaDecl.g:285:1: formalParameterDecls : ( variableModifier )* type ( formalParameterDeclsRest )? ;
 */
void
Java_JavaDecl::formalParameterDecls()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER formalParameterDecls_StartIndex;

    /* Initialize rule variables
     */
    formalParameterDecls_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(56)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:286:2: ( ( variableModifier )* type ( formalParameterDeclsRest )? )
        // JavaDecl.g:286:4: ( variableModifier )* type ( formalParameterDeclsRest )?
        {
            // JavaDecl.g:286:4: ( variableModifier )*

            for (;;)
            {
                int alt75=2;
                switch ( this->LA(1) )
                {
                case 53:
                case 74:
                	{
                		alt75=1;
                	}
                    break;

                }

                switch (alt75)
                {
            	case 1:
            	    // JavaDecl.g:286:4: variableModifier
            	    {
            	        this->followPush(FOLLOW_variableModifier_in_formalParameterDecls1572);
            	        variableModifier();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleformalParameterDeclsEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop75;	/* break out of the loop */
            	    break;
                }
            }
            loop75: ; /* Jump out to here if this rule does not match */


            this->followPush(FOLLOW_type_in_formalParameterDecls1575);
            type();

            this->followPop();
            if  (this->hasException())
            {
                goto ruleformalParameterDeclsEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:286:27: ( formalParameterDeclsRest )?
            {
                int alt76=2;
                switch ( this->LA(1) )
                {
                    case Identifier:
                    case 43:
                    	{
                    		alt76=1;
                    	}
                        break;
                }

                switch (alt76)
                {
            	case 1:
            	    // JavaDecl.g:286:27: formalParameterDeclsRest
            	    {
            	        this->followPush(FOLLOW_formalParameterDeclsRest_in_formalParameterDecls1577);
            	        formalParameterDeclsRest();

            	        this->followPop();
            	        if  (this->hasException())
            	        {
            	            goto ruleformalParameterDeclsEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

                }
            }

        }

    }
    // This is where rules clean up and exit
    //
    goto ruleformalParameterDeclsEx; /* Prevent compiler warnings */
    ruleformalParameterDeclsEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(56, formalParameterDecls_StartIndex); }

    return ;
}
/* $ANTLR end formalParameterDecls */

/**
 * $ANTLR start formalParameterDeclsRest
 * JavaDecl.g:289:1: formalParameterDeclsRest : ( variableDeclaratorId ( ',' formalParameterDecls )? | '...' variableDeclaratorId );
 */
void
Java_JavaDecl::formalParameterDeclsRest()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER formalParameterDeclsRest_StartIndex;

    /* Initialize rule variables
     */
    formalParameterDeclsRest_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(57)) )
    {
        {
        }



        return ;
    }


 
    {
        {
            //  JavaDecl.g:290:2: ( variableDeclaratorId ( ',' formalParameterDecls )? | '...' variableDeclaratorId )

            ANTLR_UINT32 alt78;

            alt78=2;

            switch ( this->LA(1) )
            {
            case Identifier:
            	{
            		alt78=1;
            	}
                break;
            case 43:
            	{
            		alt78=2;
            	}
                break;

            default:
                if (this->get_backtracking()>0)
                {
                    this->set_failedflag( true );
                    return ;
                }

                ExceptionBaseType* ex = new ANTLR_Exception< Java_JavaDeclImplTraits, NO_VIABLE_ALT_EXCEPTION, StreamType>( this->get_rec(), "" );
                ex->set_decisionNum( 78 );
                ex->set_state( 0 );


                goto ruleformalParameterDeclsRestEx;

            }

            switch (alt78)
            {
        	case 1:
        	    // JavaDecl.g:290:4: variableDeclaratorId ( ',' formalParameterDecls )?
        	    {
        	        this->followPush(FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest1590);
        	        variableDeclaratorId();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleformalParameterDeclsRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        // JavaDecl.g:290:25: ( ',' formalParameterDecls )?
        	        {
        	            int alt77=2;
        	            switch ( this->LA(1) )
        	            {
        	                case 38:
        	                	{
        	                		alt77=1;
        	                	}
        	                    break;
        	            }

        	            switch (alt77)
        	            {
        	        	case 1:
        	        	    // JavaDecl.g:290:26: ',' formalParameterDecls
        	        	    {
        	        	         this->matchToken(38, &FOLLOW_38_in_formalParameterDeclsRest1593);
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruleformalParameterDeclsRestEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	        this->followPush(FOLLOW_formalParameterDecls_in_formalParameterDeclsRest1595);
        	        	        formalParameterDecls();

        	        	        this->followPop();
        	        	        if  (this->hasException())
        	        	        {
        	        	            goto ruleformalParameterDeclsRestEx;
        	        	        }
        	        	        if (this->hasFailed())
        	        	        {
        	        	            return ;
        	        	        }


        	        	    }
        	        	    break;

        	            }
        	        }

        	    }
        	    break;
        	case 2:
        	    // JavaDecl.g:291:6: '...' variableDeclaratorId
        	    {
        	         this->matchToken(43, &FOLLOW_43_in_formalParameterDeclsRest1604);
        	        if  (this->hasException())
        	        {
        	            goto ruleformalParameterDeclsRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	        this->followPush(FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest1606);
        	        variableDeclaratorId();

        	        this->followPop();
        	        if  (this->hasException())
        	        {
        	            goto ruleformalParameterDeclsRestEx;
        	        }
        	        if (this->hasFailed())
        	        {
        	            return ;
        	        }


        	    }
        	    break;

            }
        }
    }
    // This is where rules clean up and exit
    //
    goto ruleformalParameterDeclsRestEx; /* Prevent compiler warnings */
    ruleformalParameterDeclsRestEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(57, formalParameterDeclsRest_StartIndex); }

    return ;
}
/* $ANTLR end formalParameterDeclsRest */

/**
 * $ANTLR start qualifiedName
 * JavaDecl.g:294:1: qualifiedName : Identifier ( '.' Identifier )* ;
 */
void
Java_JavaDecl::qualifiedName()
{
        Java_JavaDeclImplTraits::RuleReturnValueType _antlr_rule_exit(this);
      
    ANTLR_MARKER qualifiedName_StartIndex;

    /* Initialize rule variables
     */
    qualifiedName_StartIndex = this->index();


    if ( (this->get_backtracking()>0) && (this->haveParsedRule(58)) )
    {
        {
        }



        return ;
    }


 
    {
        // JavaDecl.g:295:2: ( Identifier ( '.' Identifier )* )
        // JavaDecl.g:295:4: Identifier ( '.' Identifier )*
        {
             this->matchToken(Identifier, &FOLLOW_Identifier_in_qualifiedName1618);
            if  (this->hasException())
            {
                goto rulequalifiedNameEx;
            }
            if (this->hasFailed())
            {
                return ;
            }


            // JavaDecl.g:295:15: ( '.' Identifier )*

            for (;;)
            {
                int alt79=2;
                switch ( this->LA(1) )
                {
                case 42:
                	{
                		alt79=1;
                	}
                    break;

                }

                switch (alt79)
                {
            	case 1:
            	    // JavaDecl.g:295:16: '.' Identifier
            	    {
            	         this->matchToken(42, &FOLLOW_42_in_qualifiedName1621);
            	        if  (this->hasException())
            	        {
            	            goto rulequalifiedNameEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	         this->matchToken(Identifier, &FOLLOW_Identifier_in_qualifiedName1623);
            	        if  (this->hasException())
            	        {
            	            goto rulequalifiedNameEx;
            	        }
            	        if (this->hasFailed())
            	        {
            	            return ;
            	        }


            	    }
            	    break;

            	default:
            	    goto loop79;	/* break out of the loop */
            	    break;
                }
            }
            loop79: ; /* Jump out to here if this rule does not match */


        }

    }
    // This is where rules clean up and exit
    //
    goto rulequalifiedNameEx; /* Prevent compiler warnings */
    rulequalifiedNameEx: ;


    	if (this->hasException())
        {
            this->preporterror();
            this->precover();
        }
    if ( this->get_backtracking() > 0 ) { this->memoize(58, qualifiedName_StartIndex); }

    return ;
}
/* $ANTLR end qualifiedName */

// $ANTLR start synpred34_JavaDecl
void Java_JavaDecl::msynpred34_JavaDecl_fragment(  )
{
    // JavaDecl.g:101:4: ( methodDeclaration )
    // JavaDecl.g:101:4: methodDeclaration
    {
        this->followPush(FOLLOW_methodDeclaration_in_synpred34_JavaDecl492);
        methodDeclaration();

        this->followPop();
        if  (this->hasException())
        {
            goto rulesynpred34_JavaDeclEx;
        }
        if (this->hasFailed())
        {
            return ;
        }


    }

// This is where rules clean up and exit
//
goto rulesynpred34_JavaDeclEx; /* Prevent compiler warnings */
rulesynpred34_JavaDeclEx: ;

}
// $ANTLR end synpred34_JavaDecl

// $ANTLR start synpred35_JavaDecl
void Java_JavaDecl::msynpred35_JavaDecl_fragment(  )
{
    // JavaDecl.g:102:4: ( fieldDeclaration )
    // JavaDecl.g:102:4: fieldDeclaration
    {
        this->followPush(FOLLOW_fieldDeclaration_in_synpred35_JavaDecl497);
        fieldDeclaration();

        this->followPop();
        if  (this->hasException())
        {
            goto rulesynpred35_JavaDeclEx;
        }
        if (this->hasFailed())
        {
            return ;
        }


    }

// This is where rules clean up and exit
//
goto rulesynpred35_JavaDeclEx; /* Prevent compiler warnings */
rulesynpred35_JavaDeclEx: ;

}
// $ANTLR end synpred35_JavaDecl

// $ANTLR start synpred81_JavaDecl
void Java_JavaDecl::msynpred81_JavaDecl_fragment(  )
{
    // JavaDecl.g:235:16: ( '.' Identifier )
    // JavaDecl.g:235:16: '.' Identifier
    {
         this->matchToken(42, &FOLLOW_42_in_synpred81_JavaDecl1278);
        if  (this->hasException())
        {
            goto rulesynpred81_JavaDeclEx;
        }
        if (this->hasFailed())
        {
            return ;
        }


         this->matchToken(Identifier, &FOLLOW_Identifier_in_synpred81_JavaDecl1280);
        if  (this->hasException())
        {
            goto rulesynpred81_JavaDeclEx;
        }
        if (this->hasFailed())
        {
            return ;
        }


    }

// This is where rules clean up and exit
//
goto rulesynpred81_JavaDeclEx; /* Prevent compiler warnings */
rulesynpred81_JavaDeclEx: ;

}
// $ANTLR end synpred81_JavaDecl
/* End of parsing rules
 * ==============================================
 */

/* ==============================================
 * Syntactic predicates
 */
bool Java_JavaDecl::msynpred( antlr3::ClassForwarder< synpred34_JavaDecl >  )
{
    ANTLR_MARKER   start;
    bool  success;

    this->inc_backtracking();
    start	= this->mark();
    this->msynpred34_JavaDecl_fragment();	    // can never throw exception
    success	= !( this->get_failedflag() );
    this->rewind(start);
    this->dec_backtracking();
    this->set_failedflag(false);
    return success;
}

bool Java_JavaDecl::msynpred( antlr3::ClassForwarder< synpred35_JavaDecl >  )
{
    ANTLR_MARKER   start;
    bool  success;

    this->inc_backtracking();
    start	= this->mark();
    this->msynpred35_JavaDecl_fragment();	    // can never throw exception
    success	= !( this->get_failedflag() );
    this->rewind(start);
    this->dec_backtracking();
    this->set_failedflag(false);
    return success;
}

bool Java_JavaDecl::msynpred( antlr3::ClassForwarder< synpred81_JavaDecl >  )
{
    ANTLR_MARKER   start;
    bool  success;

    this->inc_backtracking();
    start	= this->mark();
    this->msynpred81_JavaDecl_fragment();	    // can never throw exception
    success	= !( this->get_failedflag() );
    this->rewind(start);
    this->dec_backtracking();
    this->set_failedflag(false);
    return success;
}

/* End of syntactic predicates
 * ==============================================
 */

	}


/* End of code
 * =============================================================================
 */
